{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\src\\\\TreeVisualizer\\\\Trees\\\\BinarySearchTree\\\\BinarySearchTreeTooltips\\\\BinarySearchTreeTooltips.jsx\";\nimport React from 'react';\nimport Tooltips from '../../../Tooltips/Tooltips.jsx'; //import{ CSSTransition } from 'react-transition-group'\n\nexport default class BinarySearchTreeTooltips extends Tooltips {\n  getContent(operation) {\n    switch (operation.operation) {\n      case 'Insert':\n        return this.InsertionTooltips(operation.step);\n\n      case 'Remove':\n        return this.RemovalTooltips(operation.step);\n\n      case 'Search':\n        return this.SearchTooltips(operation.step);\n\n      case 'Pre-Order':\n      case 'In-Order':\n      case 'Post-Order':\n      case 'Level Order':\n        return this.TraversalTooltips(operation.step);\n\n      case 'Generate':\n      case 'Initial':\n      case 'Reset':\n      default:\n        return this.InitialTooltips(operation.step);\n    }\n  }\n\n  InitialTooltips(step) {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        background: 'blue',\n        width: '90%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, 'Initial: ' + step));\n  }\n\n  InsertionTooltips(step) {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        background: 'green',\n        width: '90%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, 'insert: ' + step));\n  }\n\n  RemovalTooltips(step) {\n    return React.createElement(React.Fragment, null, 'Remove');\n  }\n\n  SearchTooltips(step) {\n    return React.createElement(React.Fragment, null, 'Search');\n  }\n\n  TraversalTooltips(step) {\n    return React.createElement(React.Fragment, null, 'Traversal');\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jonathan Kelaty/Desktop/tree-visualizer/src/TreeVisualizer/Trees/BinarySearchTree/BinarySearchTreeTooltips/BinarySearchTreeTooltips.jsx"],"names":["React","Tooltips","BinarySearchTreeTooltips","getContent","operation","InsertionTooltips","step","RemovalTooltips","SearchTooltips","TraversalTooltips","InitialTooltips","background","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB,C,CACA;;AAGA,eAAe,MAAMC,wBAAN,SAAuCD,QAAvC,CAAgD;AAC3DE,EAAAA,UAAU,CAACC,SAAD,EAAY;AAClB,YAAQA,SAAS,CAACA,SAAlB;AACI,WAAK,QAAL;AAAoB,eAAO,KAAKC,iBAAL,CAAuBD,SAAS,CAACE,IAAjC,CAAP;;AACpB,WAAK,QAAL;AAAoB,eAAO,KAAKC,eAAL,CAAqBH,SAAS,CAACE,IAA/B,CAAP;;AACpB,WAAK,QAAL;AAAoB,eAAO,KAAKE,cAAL,CAAoBJ,SAAS,CAACE,IAA9B,CAAP;;AACpB,WAAK,WAAL;AACA,WAAK,UAAL;AACA,WAAK,YAAL;AACA,WAAK,aAAL;AAAoB,eAAO,KAAKG,iBAAL,CAAuBL,SAAS,CAACE,IAAjC,CAAP;;AACpB,WAAK,UAAL;AACA,WAAK,SAAL;AACA,WAAK,OAAL;AACA;AAAoB,eAAO,KAAKI,eAAL,CAAqBN,SAAS,CAACE,IAA/B,CAAP;AAXxB;AAaH;;AAEDI,EAAAA,eAAe,CAACJ,IAAD,EAAO;AAClB,WACI,0CACI;AAAK,MAAA,KAAK,EAAE;AAACK,QAAAA,UAAU,EAAC,MAAZ;AAAmBC,QAAAA,KAAK,EAAC,KAAzB;AAA+BC,QAAAA,MAAM,EAAC;AAAtC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,cAAcP,IADnB,CADJ,CADJ;AAOH;;AAEDD,EAAAA,iBAAiB,CAACC,IAAD,EAAO;AACpB,WACI,0CACI;AAAK,MAAA,KAAK,EAAE;AAACK,QAAAA,UAAU,EAAC,OAAZ;AAAoBC,QAAAA,KAAK,EAAC,KAA1B;AAAgCC,QAAAA,MAAM,EAAC;AAAvC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,aAAaP,IADlB,CADJ,CADJ;AAOH;;AAEDC,EAAAA,eAAe,CAACD,IAAD,EAAO;AAClB,WACI,0CACK,QADL,CADJ;AAKH;;AAEDE,EAAAA,cAAc,CAACF,IAAD,EAAO;AACjB,WACI,0CACK,QADL,CADJ;AAKH;;AAEDG,EAAAA,iBAAiB,CAACH,IAAD,EAAO;AACpB,WACI,0CACK,WADL,CADJ;AAKH;;AA3D0D","sourcesContent":["import React from 'react'\r\nimport Tooltips from '../../../Tooltips/Tooltips.jsx'\r\n//import{ CSSTransition } from 'react-transition-group'\r\n\r\n\r\nexport default class BinarySearchTreeTooltips extends Tooltips {\r\n    getContent(operation) {\r\n        switch( operation.operation ) {\r\n            case 'Insert':      return this.InsertionTooltips(operation.step);\r\n            case 'Remove':      return this.RemovalTooltips(operation.step); \r\n            case 'Search':      return this.SearchTooltips(operation.step);\r\n            case 'Pre-Order':\r\n            case 'In-Order':\r\n            case 'Post-Order':\r\n            case 'Level Order': return this.TraversalTooltips(operation.step);\r\n            case 'Generate':\r\n            case 'Initial':\r\n            case 'Reset':\r\n            default:            return this.InitialTooltips(operation.step);\r\n        }\r\n    }\r\n\r\n    InitialTooltips(step) {\r\n        return (\r\n            <>\r\n                <div style={{background:'blue',width:'90%',height:'100%'}}>\r\n                    {'Initial: ' + step}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    InsertionTooltips(step) {\r\n        return (\r\n            <>\r\n                <div style={{background:'green',width:'90%',height:'100%'}}>\r\n                    {'insert: ' + step}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    RemovalTooltips(step) {\r\n        return (\r\n            <>\r\n                {'Remove'}\r\n            </>\r\n        );\r\n    }\r\n\r\n    SearchTooltips(step) {\r\n        return (\r\n            <>\r\n                {'Search'}\r\n            </>\r\n        );\r\n    }\r\n\r\n    TraversalTooltips(step) {\r\n        return (\r\n            <>\r\n                {'Traversal'}\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}