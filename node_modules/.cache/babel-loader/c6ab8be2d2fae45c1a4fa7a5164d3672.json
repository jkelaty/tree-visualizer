{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import NavigationBar from'./NavigationBar/NavigationBar.jsx';import BinarySearchTree from'./Trees/BinarySearchTree/BinarySearchTree.jsx';import'./TreeVisualizer.scss';var TreeVisualizer=/*#__PURE__*/function(_React$Component){_inherits(TreeVisualizer,_React$Component);function TreeVisualizer(props){var _this;_classCallCheck(this,TreeVisualizer);_this=_possibleConstructorReturn(this,_getPrototypeOf(TreeVisualizer).call(this,props));_this.initialStateOperation='Initial';_this.state={tree:'BST',menu_key:'BST',operation:_this.initialStateOperation,tooltips:false,key:null};_this.performOperation=_this.performOperation.bind(_assertThisInitialized(_this));_this.toggleTooltips=_this.toggleTooltips.bind(_assertThisInitialized(_this));_this.changeTree=_this.changeTree.bind(_assertThisInitialized(_this));return _this;}_createClass(TreeVisualizer,[{key:\"performOperation\",value:function performOperation(operation){this.setState({operation:operation});}},{key:\"toggleTooltips\",value:function toggleTooltips(){this.setState({tooltips:!this.state.tooltips});}},{key:\"changeTree\",value:function changeTree(tree_key){var _this=this;var new_key=new Date().getTime();this.setState({operation:'Destroy',menu_key:tree_key,key:new_key});setTimeout(function(){if(_this.state.key===new_key){_this.setState({tree:tree_key});}},1500);}},{key:\"Tree\",value:function Tree(){return React.createElement(React.Fragment,null,this.state.tree==='BST'?React.createElement(BinarySearchTree,{operation:this.state.operation,tooltips:this.state.tooltips}):null);}},{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,React.createElement(NavigationBar,{visualizer:this}),this.Tree());}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.state.operation!==this.initialStateOperation){this.setState({operation:this.initialStateOperation});}}}]);return TreeVisualizer;}(React.Component);export{TreeVisualizer as default};","map":{"version":3,"sources":["C:/Users/Jonathan Kelaty/Desktop/tree-visualizer/src/TreeVisualizer/TreeVisualizer.jsx"],"names":["React","NavigationBar","BinarySearchTree","TreeVisualizer","props","initialStateOperation","state","tree","menu_key","operation","tooltips","key","performOperation","bind","toggleTooltips","changeTree","setState","tree_key","_this","new_key","Date","getTime","setTimeout","Tree","Component"],"mappings":"01BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,aAAP,KAA0B,mCAA1B,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,+CAA7B,CAEA,MAAO,uBAAP,C,GAGqBC,CAAAA,c,oFACjB,wBAAYC,KAAZ,CAAmB,gDACf,gFAAMA,KAAN,GAEA,MAAKC,qBAAL,CAA6B,SAA7B,CAEA,MAAKC,KAAL,CAAa,CACTC,IAAI,CAAE,KADG,CAETC,QAAQ,CAAE,KAFD,CAGTC,SAAS,CAAE,MAAKJ,qBAHP,CAITK,QAAQ,CAAE,KAJD,CAKTC,GAAG,CAAE,IALI,CAAb,CAQA,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB,CACA,MAAKC,cAAL,CAAwB,MAAKA,cAAL,CAAoBD,IAApB,+BAAxB,CACA,MAAKE,UAAL,CAAwB,MAAKA,UAAL,CAAgBF,IAAhB,+BAAxB,CAfe,aAgBlB,C,qFAEgBJ,S,CAAW,CACxB,KAAKO,QAAL,CAAc,CAAEP,SAAS,CAAEA,SAAb,CAAd,EACH,C,uDAEgB,CACb,KAAKO,QAAL,CAAc,CAAEN,QAAQ,CAAE,CAAE,KAAKJ,KAAL,CAAWI,QAAzB,CAAd,EACH,C,8CAEUO,Q,CAAU,CACjB,GAAIC,CAAAA,KAAK,CAAG,IAAZ,CACA,GAAIC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAAd,CAEA,KAAKL,QAAL,CAAc,CAAEP,SAAS,CAAE,SAAb,CAAwBD,QAAQ,CAAES,QAAlC,CAA4CN,GAAG,CAAEQ,OAAjD,CAAd,EAEAG,UAAU,CAAC,UAAW,CAClB,GAAKJ,KAAK,CAACZ,KAAN,CAAYK,GAAZ,GAAoBQ,OAAzB,CAAmC,CAC/BD,KAAK,CAACF,QAAN,CAAe,CAAET,IAAI,CAAEU,QAAR,CAAf,EACH,CACJ,CAJS,CAIP,IAJO,CAAV,CAKH,C,mCAEM,CACH,MACI,yCACM,KAAKX,KAAL,CAAWC,IAAX,GAAoB,KAApB,CACE,oBAAC,gBAAD,EAAkB,SAAS,CAAI,KAAKD,KAAL,CAAWG,SAA1C,CAAqD,QAAQ,CAAI,KAAKH,KAAL,CAAWI,QAA5E,EADF,CAEA,IAHN,CADJ,CAOH,C,uCAEQ,CACL,MACI,yCACI,oBAAC,aAAD,EAAe,UAAU,CAAI,IAA7B,EADJ,CAGM,KAAKa,IAAL,EAHN,CADJ,CAOH,C,+DAEoB,CACjB,GAAK,KAAKjB,KAAL,CAAWG,SAAX,GAAyB,KAAKJ,qBAAnC,CAA2D,CACvD,KAAKW,QAAL,CAAc,CAAEP,SAAS,CAAE,KAAKJ,qBAAlB,CAAd,EACH,CACJ,C,4BAhEuCL,KAAK,CAACwB,S,SAA7BrB,c","sourcesContent":["import React from 'react';\r\n\r\nimport NavigationBar from './NavigationBar/NavigationBar.jsx'\r\n\r\nimport BinarySearchTree from './Trees/BinarySearchTree/BinarySearchTree.jsx'\r\n\r\nimport './TreeVisualizer.scss';\r\n\r\n\r\nexport default class TreeVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.initialStateOperation = 'Initial';\r\n\r\n        this.state = {\r\n            tree: 'BST',\r\n            menu_key: 'BST',\r\n            operation: this.initialStateOperation,\r\n            tooltips: false,\r\n            key: null\r\n        };\r\n\r\n        this.performOperation = this.performOperation.bind(this);\r\n        this.toggleTooltips   = this.toggleTooltips.bind(this);\r\n        this.changeTree       = this.changeTree.bind(this);\r\n    }\r\n\r\n    performOperation(operation) {\r\n        this.setState({ operation: operation });\r\n    }\r\n\r\n    toggleTooltips() {\r\n        this.setState({ tooltips: ! this.state.tooltips });\r\n    }\r\n\r\n    changeTree(tree_key) {\r\n        let _this = this;\r\n        let new_key = new Date().getTime();\r\n\r\n        this.setState({ operation: 'Destroy', menu_key: tree_key, key: new_key });\r\n\r\n        setTimeout(function() {\r\n            if ( _this.state.key === new_key ) {\r\n                _this.setState({ tree: tree_key });\r\n            }\r\n        }, 1500);\r\n    }\r\n\r\n    Tree() {\r\n        return (\r\n            <>\r\n                { this.state.tree === 'BST' ?\r\n                    <BinarySearchTree operation = {this.state.operation} tooltips = {this.state.tooltips} />\r\n                : null }\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavigationBar visualizer = {this} />\r\n                \r\n                { this.Tree() }\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if ( this.state.operation !== this.initialStateOperation ) {\r\n            this.setState({ operation: this.initialStateOperation });\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}