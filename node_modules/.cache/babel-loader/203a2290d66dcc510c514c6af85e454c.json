{"ast":null,"code":"import _createClass from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _classCallCheck from\"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import React from'react';import{Transition,CSSTransition}from'react-transition-group';import Tooltips from'../../Tooltips/Tooltips.jsx';import InputModal from'../../Additional/InputModal/InputModal.jsx';import ErrorMessage from'../../Additional/ErrorMessage/ErrorMessage.jsx';import Queue from'../../Additional/Queue.js';import{randomIntFromInverval}from'../../Additional/Helpers.js';import'./BinarySearchTree.scss';var BinarySearchTreeNode=function BinarySearchTreeNode(val){_classCallCheck(this,BinarySearchTreeNode);this.value=val;this.left=null;this.right=null;this.animations={initial:{node:{active:false,delay:0},line:{active:false,delay:0}},visited:{node:{active:false,delay:0},line:{active:false,delay:0}},success:{node:{active:false,delay:0},line:{active:false,delay:0}},removed:{node:{active:false,delay:0},line:{active:false,delay:0}}};this.moveAnimations={active:false,delay:0,css:{entering:{},entered:{},exiting:{},exited:{}}};};var BinarySearchTree=/*#__PURE__*/function(_React$Component){_inherits(BinarySearchTree,_React$Component);function BinarySearchTree(props){var _this;_classCallCheck(this,BinarySearchTree);_this=_possibleConstructorReturn(this,_getPrototypeOf(BinarySearchTree).call(this,props));_this.initialStateOperation='Initial';_this.visibleClasses={appearDone:'visible',enterDone:'visible',exit:'visible'};_this.operationSteps={Initial:['Initial'],Generate:['Reset','Generate'],Reset:['Hide','Reset'],Insert:['Input','Insert','Complete'],Remove:['Input','Remove 1','Remove 2','Remove 3','Remove 4','Complete'],Search:['Input','Search'],'Pre-Order':['Traverse'],'In-Order':['Traverse'],'Post-Order':['Traverse'],'Level Order':['Traverse']};_this.name='BinarySearchTree';_this.key='BST';_this.root=null;_this.removeValue=null;_this.targetValue=null;_this.targetNode=null;_this.timeout=0;_this.input=false;_this.waiting=false;_this.errorMessage={message:'',key:null};_this.state={operation:_this.initialStateOperation,step:0,tooltips:false,destroy:true};_this.receiveInput=_this.receiveInput.bind(_assertThisInitialized(_this));_this.advanceOperationStepFromTooltips=_this.advanceOperationStepFromTooltips.bind(_assertThisInitialized(_this));return _this;}_createClass(BinarySearchTree,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({operation:'Generate',step:0});}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(nextState.destroy){return true;}else if(this.waiting&&this.state.tooltips===nextState.tooltips){if(nextProps.operation!==this.initialStateOperation&&nextProps.operation!==this.state.operation){this.errorMessage['message']='Error: Tree performing operation';this.errorMessage['key']=new Date().getTime();return true;}return false;}else{return true;}}},{key:\"render\",value:function render(){this.performOperationStep();return React.createElement(React.Fragment,null,this.input?React.createElement(InputModal,{operation:this.state.operation,callback:this.receiveInput}):null,React.createElement(ErrorMessage,{message:this.errorMessage['message'],key:this.errorMessage['key']}),React.createElement(\"div\",{id:this.name,className:\"tree\",style:{transform:this.getScaleFactor()}},this.Tree()),React.createElement(Tooltips,{active:this.state.tooltips,operation:this.state.operation,step:this.state.step,next:this.advanceOperationStepFromTooltips}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.advanceOperationStep();}/* Handle calling function to perform animations for a given operation */},{key:\"performOperationStep\",value:function performOperationStep(){switch(this.state.operation){case'Generate':this.GenerateTree();break;case'Reset':this.ResetTree();break;case'Insert':this.InsertInTree();break;case'Remove':this.RemoveFromTree();break;case'Search':this.SearchTree();break;case'Pre-Order':case'In-Order':case'Post-Order':case'Level Order':this.TraverseTree();break;case'Initial':default:this.InitialTree();break;}}/* Advances operation step asynchonously based on timeout set */},{key:\"advanceOperationStep\",value:function advanceOperationStep(){if(this.state.operation!==this.initialStateOperation){if(this.state.step>=this.operationSteps[this.state.operation].length-1){if(!this.waiting){var _this2=this;_this2.waiting=true;setTimeout(function(){_this2.waiting=false;if(!_this2.state.tooltips||_this2.state.operation==='Generate'||_this2.state.operation==='Reset'){_this2.setState({operation:'Initial',step:0});}},_this2.timeout);}}else{if(this.operationSteps[this.state.operation][this.state.step]==='Input')return;if(!this.waiting){var _this3=this;_this3.waiting=true;setTimeout(function(){_this3.waiting=false;if(!_this3.state.tooltips||_this3.state.operation==='Generate'||_this3.state.operation==='Reset'){_this3.setState({step:_this3.state.step+1});}},_this3.timeout);}}}}},{key:\"advanceOperationStepFromTooltips\",value:function advanceOperationStepFromTooltips(){if(this.state.step>=this.operationSteps[this.state.operation].length-1){this.setState({operation:'Initial',step:0});}else{this.setState({step:this.state.step+1});}}/* Basic internal tree operations */},{key:\"insertNumElements\",value:function insertNumElements(elements){for(var i=0;i<elements;++i){var val=randomIntFromInverval(1,150);if(this.insert(val)){if(this.height()>5){this.root=this.remove(val);--i;}}else{--i;}}}},{key:\"reset\",value:function reset(){this.root=null;}},{key:\"height\",value:function height(){var node=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.root;if(node===null)return 0;return Math.max(this.height(node.left),this.height(node.right))+1;}},{key:\"contains\",value:function contains(val){var node=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.root;if(!node)return false;if(val<node.value){return this.contains(val,node.left);}else if(val>node.value){return this.contains(val,node.right);}else{return true;}}},{key:\"insert\",value:function insert(val){if(this.root===null){this.root=new BinarySearchTreeNode(val);return true;}var curr=this.root;while(true){if(curr.value===val){//tree contains key already\nreturn false;}else if(curr.value<val){if(curr.right===null){curr.right=new BinarySearchTreeNode(val);return true;}curr=curr.right;}else{if(curr.left===null){curr.left=new BinarySearchTreeNode(val);return true;}curr=curr.left;}}}},{key:\"remove\",value:function remove(val){var node=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.root;if(!val)return;if(node===null)return node;if(val<node.value){node.left=this.remove(val,node.left);}else if(val>node.value){node.right=this.remove(val,node.right);}else{if(node.left===null){return node.right;}else if(node.right===null){return node.left;}else{node.value=this.inOrderSuccessor(node.right);node.right=this.remove(node.value,node.right);}}return node;}},{key:\"inOrderSuccessor\",value:function inOrderSuccessor(node){if(node.left!==null){return this.inOrderSuccessor(node.left);}else{return node.value;}}},{key:\"getScaleFactor\",value:function getScaleFactor(){var scale_factor=(window.innerWidth-20)/(Math.pow(2,this.height()-1)*70);return'scale('+(scale_factor>1?1:scale_factor)+')';}/* Handle creating Tree nodes and lines in DOM */},{key:\"Tree\",value:function Tree(){var _this4=this;var node=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.root;var tree_height=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.height();var curr_height=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var pos=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'root';if(curr_height===tree_height)return null;var leftChild=this.Tree(node?node.left:null,tree_height,curr_height+1,'left');var rightChild=this.Tree(node?node.right:null,tree_height,curr_height+1,'right');var classes=['node-wrapper',pos].join(' ');if(node===null){return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:classes,\"node-value\":\"null\"},React.createElement(\"div\",{className:\"node-value\"}),leftChild,rightChild));}else{var rootWidth={width:node===this.root?Math.pow(2,tree_height-1)*70+'px':null};return React.createElement(React.Fragment,null,React.createElement(Transition,{in:node.moveAnimations['active'],timeout:node.moveAnimations['delay'],appear:true},function(state){return React.createElement(\"div\",{className:classes,\"node-value\":node.value,\"node-layer\":tree_height-curr_height,style:node===_this4.root&&!node.moveAnimations['active']?rootWidth:node.moveAnimations['css'][state]},React.createElement(CSSTransition,{in:node.animations['initial']['node']['active'],timeout:node.animations['initial']['node']['delay'],classNames:_this4.visibleClasses,appear:true},React.createElement(\"div\",{className:\"node-value\"},_this4.getNodeHover(node.value),_this4.getCricle(node))),leftChild,rightChild,_this4.getConnectingLine(node,pos));}));}}},{key:\"getCricle\",value:function getCricle(node){return React.createElement(React.Fragment,null,React.createElement(\"svg\",{className:\"circle node-value-circle\",xmlns:\"http://www.w3.org/2000/svg\"},React.createElement(\"circle\",{className:\"circle node-circle initial\",r:\"24\",cx:\"25\",cy:\"25\",fill:\"none\"}),React.createElement(CSSTransition,{in:node.animations['visited']['node']['active'],timeout:node.animations['visited']['node']['delay'],classNames:this.visibleClasses,appear:true},React.createElement(\"svg\",{className:\"circle node-circle-traversal\",xmlns:\"http://www.w3.org/2000/svg\"},React.createElement(\"circle\",{className:\"circle node-circle-background visited\",r:\"24\",cx:\"25\",cy:\"25\",fill:\"none\"}),React.createElement(\"circle\",{className:\"circle node-circle visited\",r:\"24\",cx:\"25\",cy:\"25\",fill:\"none\"}))),React.createElement(CSSTransition,{in:node.animations['success']['node']['active'],timeout:node.animations['success']['node']['delay'],classNames:this.visibleClasses,appear:true},React.createElement(\"svg\",{className:\"circle node-circle-traversal\",xmlns:\"http://www.w3.org/2000/svg\"},React.createElement(\"circle\",{className:\"circle node-circle-background success\",r:\"24\",cx:\"25\",cy:\"25\",fill:\"none\"}),React.createElement(\"circle\",{className:\"circle node-circle success\",r:\"24\",cx:\"25\",cy:\"25\",fill:\"none\"}))),React.createElement(CSSTransition,{in:node.animations['removed']['node']['active'],timeout:node.animations['removed']['node']['delay'],classNames:this.visibleClasses,appear:true},React.createElement(\"svg\",{className:\"circle node-circle-traversal\",xmlns:\"http://www.w3.org/2000/svg\"},React.createElement(\"circle\",{className:\"circle node-circle-background removed\",r:\"24\",cx:\"25\",cy:\"25\",fill:\"none\"}),React.createElement(\"circle\",{className:\"circle node-circle removed\",r:\"24\",cx:\"25\",cy:\"25\",fill:\"none\"}))),React.createElement(\"text\",{className:\"text node-value-text\",x:\"50%\",y:\"50%\",fill:\"black\",textAnchor:\"middle\",dominantBaseline:\"central\"},node.value)));}},{key:\"getNodeHover\",value:function getNodeHover(val){var _this5=this;return React.createElement(React.Fragment,null,React.createElement(\"span\",{className:\"node-hover\"},React.createElement(\"i\",{className:\"fas fa-search\",onClick:function onClick(){return _this5.searchNode(val);}}),React.createElement(\"span\",{className:\"search\"},React.createElement(\"svg\",{className:\"circle\",xmlns:\"http://www.w3.org/2000/svg\"},React.createElement(\"circle\",{className:\"circle node-hover-circle\",r:\"24\",cx:\"25\",cy:\"25\",fill:\"none\"}))),React.createElement(\"i\",{className:\"fas fa-trash\",onClick:function onClick(){return _this5.deleteNode(val);}}),React.createElement(\"span\",{className:\"trash\"},React.createElement(\"svg\",{className:\"circle\",xmlns:\"http://www.w3.org/2000/svg\"},React.createElement(\"circle\",{className:\"circle node-hover-circle\",r:\"24\",cx:\"25\",cy:\"25\",fill:\"none\"})))));}},{key:\"getConnectingLine\",value:function getConnectingLine(node,pos){if(pos==='left'||pos==='right'){return React.createElement(React.Fragment,null,React.createElement(CSSTransition,{in:node.animations['initial']['line']['active'],timeout:node.animations['initial']['line']['delay'],classNames:this.visibleClasses,appear:true},React.createElement(\"svg\",{className:\"line node-line\",xmlns:\"http://www.w3.org/2000/svg\"},this.getLine(pos,'initial'),React.createElement(CSSTransition,{in:node.animations['visited']['line']['active'],timeout:node.animations['visited']['line']['delay'],classNames:this.visibleClasses,appear:true},this.getLine(pos,'visited')),React.createElement(CSSTransition,{in:node.animations['success']['line']['active'],timeout:node.animations['success']['line']['delay'],classNames:this.visibleClasses,appear:true},this.getLine(pos,'success')),React.createElement(CSSTransition,{in:node.animations['removed']['line']['active'],timeout:node.animations['removed']['line']['delay'],classNames:this.visibleClasses,appear:true},this.getLine(pos,'removed')))));}else{return null;}}},{key:\"getLine\",value:function getLine(pos,addClass){var classes=['line',addClass].join(' ');if(pos==='left')return React.createElement(\"line\",{className:classes,x1:\"0\",y1:\"50\",x2:\"100%\",y2:\"0\"});else if(pos==='right')return React.createElement(\"line\",{className:classes,x1:\"0\",y1:\"0\",x2:\"100%\",y2:\"50\"});else return null;}/* Handle operation step */},{key:\"InitialTree\",value:function InitialTree(){this.removeValue=null;this.targetValue=null;this.targetNode=null;this.timeout=0;this.input=false;this.waiting=false;this.setHideTraversalAnimations();this.setHideMoveAnimations();if(document.querySelector('.moved')){document.querySelector('.moved').classList.remove('moved');}}},{key:\"GenerateTree\",value:function GenerateTree(){switch(this.operationSteps[this.state.operation][this.state.step]){case'Reset':if(this.root){this.setHideAnimations();this.timeout=1000;}else{this.timeout=0;}break;case'Generate':this.reset();this.insertNumElements(15);this.setGenerationAnimations();break;default:this.InitialTree();break;}}},{key:\"ResetTree\",value:function ResetTree(){switch(this.operationSteps[this.state.operation][this.state.step]){case'Hide':if(this.root){this.setHideAnimations();this.timeout=1000;}else{this.timeout=0;}break;case'Reset':this.reset();this.timeout=0;break;default:this.InitialTree();break;}}},{key:\"InsertInTree\",value:function InsertInTree(val){switch(this.operationSteps[this.state.operation][this.state.step]){case'Input':this.input=true;break;case'Insert':if(this.targetValue){if(!this.contains(this.targetValue)){this.insert(this.targetValue);this.timeout=this.setInsertAnimations();}else{this.targetValue=null;this.errorMessage['message']='Error: Tree already contains element';this.errorMessage['key']=new Date().getTime();}}break;case'Complete':if(this.targetValue){this.setInsertionCompleteAnimations();this.timeout=5000;}break;default:this.InitialTree();break;}}},{key:\"RemoveFromTree\",value:function RemoveFromTree(){switch(this.operationSteps[this.state.operation][this.state.step]){case'Input':if(this.root){this.input=true;}else{this.errorMessage['message']='Error: Tree is empty';this.errorMessage['key']=new Date().getTime();}break;case'Remove 1':if(this.targetValue){if(this.contains(this.targetValue)){this.timeout=this.setRemoveAnimations()+3000;}else{this.targetValue=null;this.errorMessage['message']='Error: Tree does not contain element';this.errorMessage['key']=new Date().getTime();}}break;case'Remove 2':if(this.targetValue){this.timeout=this.setMoveSubtreeAnimations()+3000;}break;case'Remove 3':if(this.targetValue){if(this.targetNode){this.timeout=this.setRemoveAnimations()+3000;}else{this.timeout=0;}}break;case'Remove 4':if(this.targetValue){if(this.targetNode){this.timeout=this.setMoveSubtreeAnimations()+3000;}else{this.timeout=0;}}break;case'Complete':if(this.targetValue){this.root=this.remove(this.removeValue);this.setHideMoveAnimations();this.setHideTraversalAnimations();document.querySelector('.root').classList.add('moved');this.timeout=2000;}break;default:this.InitialTree();break;}}},{key:\"SearchTree\",value:function SearchTree(){switch(this.operationSteps[this.state.operation][this.state.step]){case'Input':if(this.root){this.input=true;}else{this.errorMessage['message']='Error: Tree is empty';this.errorMessage['key']=new Date().getTime();}break;case'Search':if(this.targetValue){this.timeout=this.setSearchAnimations()+7000;if(!this.contains(this.targetValue)){var _this6=this;setTimeout(function(){_this6.errorMessage['message']='Tree does not contain element';_this6.errorMessage['key']=new Date().getTime();_this6.forceUpdate();},_this6.timeout-6000);}}break;default:this.InitialTree();break;}}},{key:\"TraverseTree\",value:function TraverseTree(){if(this.root){switch(this.state.operation){case'Pre-Order':case'In-Order':case'Post-Order':this.timeout=this.setDFSTraversalAnimations(this.state.operation)+5000;break;case'Level Order':this.timeout=this.setBFSTraversalAnimations()+5000;break;default:this.InitialTree();break;}}else{this.errorMessage['message']='Error: Tree is empty';this.errorMessage['key']=new Date().getTime();}}/* Node hover operations and input dialog */},{key:\"receiveInput\",value:function receiveInput(val){this.targetValue=val;this.input=false;if(this.state.operation==='Remove'){this.deleteNode(val);}else{this.setState({step:this.state.step+1});}}},{key:\"searchNode\",value:function searchNode(val){this.targetValue=val;this.setState({operation:'Search',step:1});}},{key:\"deleteNode\",value:function deleteNode(val){this.targetValue=val;this.removeValue=val;this.targetNode=this.root;this.setState({operation:'Remove',step:1});}/* Set animations for nodes for given operation step */},{key:\"setGenerationAnimations\",value:function setGenerationAnimations(){var queue=new Queue();queue.push(this.root);var delay=150;while(!queue.empty()){var node=queue.front();if(node){queue.push(node.left);queue.push(node.right);for(var key in node.animations['initial']){node.animations['initial'][key]['active']=true;node.animations['initial'][key]['delay']=delay;}delay+=200;}}}},{key:\"setHideAnimations\",value:function setHideAnimations(){var node=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.root;if(node===null)return;for(var state in node.animations){for(var element in node.animations[state]){node.animations[state][element]['active']=false;node.animations[state][element]['delay']=150;}}this.setHideAnimations(node.left);this.setHideAnimations(node.right);}},{key:\"setHideTraversalAnimations\",value:function setHideTraversalAnimations(){var node=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.root;if(node===null)return;for(var state in node.animations){for(var element in node.animations[state]){if(state==='initial'){node.animations[state][element]['active']=true;node.animations[state][element]['delay']=0;}else{node.animations[state][element]['active']=false;node.animations[state][element]['delay']=150;}}}this.setHideTraversalAnimations(node.left);this.setHideTraversalAnimations(node.right);}},{key:\"setHideMoveAnimations\",value:function setHideMoveAnimations(){var node=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.root;if(node===null)return;node.moveAnimations['active']=false;node.moveAnimations['delay']=0;node.moveAnimations['css']={entering:{},entered:{},exiting:{},exited:{}};this.setHideMoveAnimations(node.left);this.setHideMoveAnimations(node.right);}},{key:\"setDFSTraversalAnimations\",value:function setDFSTraversalAnimations(order){var node=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.root;var delay=arguments.length>2&&arguments[2]!==undefined?arguments[2]:150;if(node===null)return delay;var _delay=node===this.root?delay:delay+1000;node.animations['visited']['node']['active']=true;node.animations['visited']['node']['delay']=_delay+500;node.animations['visited']['line']['active']=true;node.animations['visited']['line']['delay']=_delay;if(order==='Pre-Order'){_delay+=1000;node.animations['success']['node']['active']=true;node.animations['success']['node']['delay']=_delay;}_delay=this.setDFSTraversalAnimations(order,node.left,_delay);if(order==='In-Order'){_delay+=1000;node.animations['success']['node']['active']=true;node.animations['success']['node']['delay']=_delay;}_delay=this.setDFSTraversalAnimations(order,node.right,_delay);if(order==='Post-Order'){_delay+=1000;node.animations['success']['node']['active']=true;node.animations['success']['node']['delay']=_delay;}node.animations['success']['line']['active']=true;node.animations['success']['line']['delay']=_delay;return _delay;}},{key:\"setBFSTraversalAnimations\",value:function setBFSTraversalAnimations(){var queue=new Queue();var delay=150;if(this.root){queue.push(this.root);this.root.animations['visited']['node']['active']=true;this.root.animations['visited']['node']['delay']=delay;}while(!queue.empty()){var node=queue.front();if(node){if(node.left){queue.push(node.left);delay+=1000;for(var element in node.left.animations['visited']){node.left.animations['visited'][element]['active']=true;node.left.animations['visited'][element]['delay']=delay;}}if(node.right){queue.push(node.right);delay+=1000;for(var _element in node.right.animations['visited']){node.right.animations['visited'][_element]['active']=true;node.right.animations['visited'][_element]['delay']=delay;}}delay+=1000;for(var _element2 in node.animations['success']){node.animations['success'][_element2]['active']=true;node.animations['success'][_element2]['delay']=delay;}}}return delay;}},{key:\"setSearchAnimations\",value:function setSearchAnimations(){var node=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.root;var delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:150;if(!this.targetValue||!node)return delay;else{var _delay=delay;if(this.targetValue===node.value){node.animations['success']['node']['active']=true;node.animations['success']['node']['delay']=delay+1250;}else if(this.targetValue<node.value)_delay=this.setSearchAnimations(node.left,delay+1000);else _delay=this.setSearchAnimations(node.right,delay+1000);node.animations['visited']['node']['active']=true;node.animations['visited']['node']['delay']=delay+500;node.animations['visited']['line']['active']=true;node.animations['visited']['line']['delay']=delay;return _delay;}}},{key:\"setInsertAnimations\",value:function setInsertAnimations(){var node=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.root;var delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:150;if(!this.targetValue||!node)return delay;else{var _delay=delay;if(this.targetValue===node.value){this.targetNode=node;return _delay;}else if(this.targetValue<node.value)_delay=this.setInsertAnimations(node.left,delay+1000);else _delay=this.setInsertAnimations(node.right,delay+1000);node.animations['visited']['node']['active']=true;node.animations['visited']['node']['delay']=delay+500;node.animations['visited']['line']['active']=true;node.animations['visited']['line']['delay']=delay;return _delay;}}},{key:\"setInsertionCompleteAnimations\",value:function setInsertionCompleteAnimations(){var node=this.targetNode;if(node){node.animations['initial']['node']['active']=true;node.animations['initial']['node']['delay']=650;node.animations['initial']['line']['active']=true;node.animations['initial']['line']['delay']=150;node.animations['success']['node']['active']=true;node.animations['success']['node']['delay']=1250;}}},{key:\"setRemoveAnimations\",value:function setRemoveAnimations(){var node=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.targetNode;var delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:150;if(!this.targetValue||!node)return delay;else{node.animations['visited']['node']['active']=true;node.animations['visited']['node']['delay']=delay+500;node.animations['visited']['line']['active']=true;node.animations['visited']['line']['delay']=delay;if(this.targetValue===node.value){node.animations['success']['node']['active']=false;node.animations['success']['node']['delay']=delay;node.animations['success']['line']['active']=false;node.animations['success']['line']['delay']=delay;node.animations['removed']['node']['active']=true;node.animations['removed']['node']['delay']=delay+1500;node.animations['removed']['line']['active']=true;node.animations['removed']['line']['delay']=delay+1000;node.animations['initial']['node']['active']=false;node.animations['initial']['node']['delay']=delay+1500;node.animations['initial']['line']['active']=false;node.animations['initial']['line']['delay']=delay+1500;this.targetNode=node;}else if(this.targetValue<node.value)return this.setRemoveAnimations(node.left,delay+1000);else return this.setRemoveAnimations(node.right,delay+1000);return delay;}}},{key:\"setMoveSubtreeAnimations\",value:function setMoveSubtreeAnimations(){var node=this.targetNode;var _delay=0;if(node){if(node.left===null||node.right===null){node.animations['initial']['line']['active']=true;node.animations['initial']['line']['delay']=3000;node.animations['visited']['node']['active']=false;node.animations['visited']['node']['delay']=150;node.animations['visited']['line']['active']=false;node.animations['visited']['line']['delay']=150;node.animations['removed']['node']['active']=false;node.animations['removed']['node']['delay']=150;node.animations['removed']['line']['active']=false;node.animations['removed']['line']['delay']=150;node.animations['success']['line']['active']=true;node.animations['success']['line']['delay']=3500;if(node.left===null&&node.right===null){node.animations['initial']['line']['active']=false;node.animations['initial']['line']['delay']=0;node.animations['success']['line']['active']=false;node.animations['success']['line']['delay']=0;if(document.querySelectorAll('.node-wrapper[node-layer=\"1\"]').length===1&&parseInt(document.querySelector('.node-wrapper[node-layer=\"1\"]').attributes['node-value'].value)===node.value){this.root.moveAnimations['active']=true;this.root.moveAnimations['delay']=1000;this.root.moveAnimations['css']['entering']={'width':document.querySelector('.root').offsetWidth+'px'};this.root.moveAnimations['css']['entered']={'width':document.querySelector('.root').offsetWidth/2+'px'};}}else{if(node.left===null){node.right.animations['initial']['line']['active']=false;node.right.animations['initial']['line']['delay']=150;node.right.moveAnimations['active']=true;node.right.moveAnimations['delay']=1000;node.right.moveAnimations['css']['entered']={'width':'100%','zIndex':'1000','transform':'translate(-50%, -50px)'};_delay=this.setMoveSubtreeCompleteAnimations(node.right);}else if(node.right===null){node.left.animations['initial']['line']['active']=false;node.left.animations['initial']['line']['delay']=150;node.left.moveAnimations['active']=true;node.left.moveAnimations['delay']=1000;node.left.moveAnimations['css']['entered']={'width':'100%','zIndex':'1000','transform':'translate(0, -50px)'};_delay=this.setMoveSubtreeCompleteAnimations(node.left);}if(document.querySelectorAll('.node-wrapper[node-value=\"'+node.value+'\"] .node-wrapper[node-layer=\"1\"]').length===document.querySelectorAll('.node-wrapper[node-layer=\"1\"]').length){this.root.moveAnimations['active']=true;this.root.moveAnimations['delay']=1000;this.root.moveAnimations['css']['entering']={'width':document.querySelector('.root').offsetWidth+'px'};this.root.moveAnimations['css']['entered']={'width':document.querySelector('.root').offsetWidth/2+'px'};}}this.targetNode=null;}else{var delay=this.setInOrderSuccessorAnimations(node.right);delay+=1000;node.animations['visited']['node']['active']=false;node.animations['visited']['node']['delay']=delay;node.animations['visited']['line']['active']=false;node.animations['visited']['line']['delay']=delay;node.animations['removed']['node']['active']=false;node.animations['removed']['node']['delay']=delay;node.animations['removed']['line']['active']=false;node.animations['removed']['line']['delay']=delay;delay+=1000;node.animations['initial']['node']['active']=true;node.animations['initial']['node']['delay']=delay;node.animations['initial']['line']['active']=true;node.animations['initial']['line']['delay']=delay+500;delay+=1000;node.animations['success']['node']['active']=true;node.animations['success']['node']['delay']=delay+500;node.animations['success']['line']['active']=true;node.animations['success']['line']['delay']=delay;_delay=delay;}}return _delay;}},{key:\"setMoveSubtreeCompleteAnimations\",value:function setMoveSubtreeCompleteAnimations(node){var delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4000;var first=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var _delay=delay;if(node){if(first){node.animations['success']['node']['active']=true;node.animations['success']['node']['delay']=delay;}else{node.animations['success']['node']['active']=true;node.animations['success']['node']['delay']=delay;node.animations['success']['line']['active']=true;node.animations['success']['line']['delay']=delay;}_delay=Math.max(this.setMoveSubtreeCompleteAnimations(node.left,delay+300,false),this.setMoveSubtreeCompleteAnimations(node.right,delay+300,false));}return _delay;}},{key:\"setInOrderSuccessorAnimations\",value:function setInOrderSuccessorAnimations(node){var delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:150;node.animations['visited']['node']['active']=true;node.animations['visited']['node']['delay']=delay+500;node.animations['visited']['line']['active']=true;node.animations['visited']['line']['delay']=delay;if(node.left){return this.setInOrderSuccessorAnimations(node.left,delay+1000);}else{node.animations['success']['node']['active']=true;node.animations['success']['node']['delay']=delay+1500;node.animations['success']['line']['active']=true;node.animations['success']['line']['delay']=delay+1000;document.querySelector('.node-wrapper[node-value=\"'+this.targetValue+'\"]>.node-value .node-value-text').textContent=node.value;this.targetNode=node;this.targetValue=node.value;return delay+1500;}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(newProps,state){var initialStateOperation='Initial';var destroyStateOperation='Destroy';if(newProps.operation===destroyStateOperation){return{operation:'Reset',step:0,destroy:true};}else if(newProps.operation!==initialStateOperation){if(state.operation===initialStateOperation){return{operation:newProps.operation,tooltips:newProps.tooltips};}else if(newProps.tooltips!==state.tooltips){return{tooltips:newProps.tooltips};}}else if(newProps.tooltips!==state.tooltips){return{tooltips:newProps.tooltips};}return null;}}]);return BinarySearchTree;}(React.Component);export{BinarySearchTree as default};","map":{"version":3,"sources":["C:/Users/Jonathan Kelaty/Desktop/tree-visualizer/src/TreeVisualizer/Trees/BinarySearchTree/BinarySearchTree.jsx"],"names":["React","Transition","CSSTransition","Tooltips","InputModal","ErrorMessage","Queue","randomIntFromInverval","BinarySearchTreeNode","val","value","left","right","animations","initial","node","active","delay","line","visited","success","removed","moveAnimations","css","entering","entered","exiting","exited","BinarySearchTree","props","initialStateOperation","visibleClasses","appearDone","enterDone","exit","operationSteps","Initial","Generate","Reset","Insert","Remove","Search","name","key","root","removeValue","targetValue","targetNode","timeout","input","waiting","errorMessage","message","state","operation","step","tooltips","destroy","receiveInput","bind","advanceOperationStepFromTooltips","setState","nextProps","nextState","Date","getTime","performOperationStep","transform","getScaleFactor","Tree","advanceOperationStep","GenerateTree","ResetTree","InsertInTree","RemoveFromTree","SearchTree","TraverseTree","InitialTree","length","_this","setTimeout","elements","i","insert","height","remove","Math","max","contains","curr","inOrderSuccessor","scale_factor","window","innerWidth","pow","tree_height","curr_height","pos","leftChild","rightChild","classes","join","rootWidth","width","getNodeHover","getCricle","getConnectingLine","searchNode","deleteNode","getLine","addClass","setHideTraversalAnimations","setHideMoveAnimations","document","querySelector","classList","setHideAnimations","reset","insertNumElements","setGenerationAnimations","setInsertAnimations","setInsertionCompleteAnimations","setRemoveAnimations","setMoveSubtreeAnimations","add","setSearchAnimations","forceUpdate","setDFSTraversalAnimations","setBFSTraversalAnimations","queue","push","empty","front","element","order","_delay","querySelectorAll","parseInt","attributes","offsetWidth","setMoveSubtreeCompleteAnimations","setInOrderSuccessorAnimations","first","textContent","newProps","destroyStateOperation","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport{ Transition, CSSTransition } from 'react-transition-group'\r\n\r\nimport Tooltips from '../../Tooltips/Tooltips.jsx'\r\nimport InputModal from '../../Additional/InputModal/InputModal.jsx'\r\nimport ErrorMessage from '../../Additional/ErrorMessage/ErrorMessage.jsx'\r\n\r\nimport Queue from '../../Additional/Queue.js'\r\nimport { randomIntFromInverval } from '../../Additional/Helpers.js'\r\n\r\nimport './BinarySearchTree.scss'\r\n\r\nclass BinarySearchTreeNode {\r\n    constructor(val) {\r\n        this.value = val;\r\n        this.left  = null;\r\n        this.right = null;\r\n\r\n        this.animations = {\r\n            initial: {\r\n                node: { active: false, delay: 0 },\r\n                line: { active: false, delay: 0 }\r\n            },\r\n            visited: {\r\n                node: { active: false, delay: 0 },\r\n                line: { active: false, delay: 0 }\r\n            },\r\n            success: {\r\n                node: { active: false, delay: 0 },\r\n                line: { active: false, delay: 0 }\r\n            },\r\n            removed: {\r\n                node: { active: false, delay: 0 },\r\n                line: { active: false, delay: 0 }\r\n            }\r\n        };\r\n\r\n        this.moveAnimations = {\r\n            active: false,\r\n            delay: 0,\r\n            css: {\r\n                entering: {},\r\n                entered:  {},\r\n                exiting:  {},\r\n                exited:   {}\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport default class BinarySearchTree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialStateOperation = 'Initial';\r\n\r\n        this.visibleClasses = {\r\n            appearDone: 'visible',\r\n            enterDone: 'visible',\r\n            exit: 'visible'\r\n        };\r\n\r\n        this.operationSteps = {\r\n            Initial: [\r\n                'Initial'\r\n            ],\r\n            Generate: [\r\n                'Reset',\r\n                'Generate'\r\n            ],\r\n            Reset: [\r\n                'Hide',\r\n                'Reset'\r\n            ],\r\n            Insert: [\r\n                'Input',\r\n                'Insert',\r\n                'Complete'\r\n            ],\r\n            Remove: [\r\n                'Input',\r\n                'Remove 1',\r\n                'Remove 2',\r\n                'Remove 3',\r\n                'Remove 4',\r\n                'Complete'\r\n            ],\r\n            Search: [\r\n                'Input',\r\n                'Search'\r\n            ],\r\n            'Pre-Order': [\r\n                'Traverse'\r\n            ],\r\n            'In-Order': [\r\n                'Traverse'\r\n            ],\r\n            'Post-Order': [\r\n                'Traverse'\r\n            ],\r\n            'Level Order': [\r\n                'Traverse'\r\n            ]\r\n        };\r\n\r\n        this.name = 'BinarySearchTree';\r\n        this.key  = 'BST';\r\n        this.root = null;\r\n\r\n        this.removeValue = null;\r\n        this.targetValue = null;\r\n        this.targetNode = null;\r\n        this.timeout = 0;\r\n        this.input = false;\r\n        this.waiting = false;\r\n        this.errorMessage = {\r\n            message: '',\r\n            key: null\r\n        };\r\n\r\n        this.state = {\r\n            operation: this.initialStateOperation,\r\n            step: 0,\r\n            tooltips: false,\r\n            destroy: true\r\n        };\r\n\r\n        this.receiveInput = this.receiveInput.bind(this);\r\n        this.advanceOperationStepFromTooltips = this.advanceOperationStepFromTooltips.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ operation: 'Generate', step: 0 });\r\n    }\r\n    \r\n    static getDerivedStateFromProps(newProps, state) {\r\n        const initialStateOperation = 'Initial';\r\n        const destroyStateOperation = 'Destroy';\r\n\r\n        if ( newProps.operation === destroyStateOperation ) {\r\n            return { operation: 'Reset', step: 0, destroy: true };\r\n        }\r\n        else if ( newProps.operation !== initialStateOperation ) {\r\n            if ( state.operation === initialStateOperation ) {\r\n                return { operation: newProps.operation, tooltips: newProps.tooltips };\r\n            }\r\n            else if ( newProps.tooltips !== state.tooltips ) {\r\n                return { tooltips: newProps.tooltips };\r\n            } \r\n        }\r\n        else if ( newProps.tooltips !== state.tooltips ) {\r\n            return { tooltips: newProps.tooltips };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if ( nextState.destroy ) {\r\n            return true;\r\n        }\r\n        else if ( this.waiting && (this.state.tooltips === nextState.tooltips) ) {\r\n            if ( nextProps.operation !== this.initialStateOperation && nextProps.operation !== this.state.operation ) {\r\n                this.errorMessage['message'] = 'Error: Tree performing operation';\r\n                this.errorMessage['key'] = new Date().getTime();\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.performOperationStep();\r\n\r\n        return (\r\n            <>\r\n                { this.input ?\r\n                    <InputModal operation = {this.state.operation} callback = {this.receiveInput} />\r\n                : null }\r\n\r\n                <ErrorMessage message = {this.errorMessage['message']} key = {this.errorMessage['key']} />\r\n\r\n                <div\r\n                    id={ this.name }\r\n                    className='tree'\r\n                    style={ {transform: this.getScaleFactor()} }>\r\n\r\n                    { this.Tree() }\r\n\r\n                </div>\r\n\r\n                <Tooltips\r\n                    active = {this.state.tooltips}\r\n                    operation = {this.state.operation}\r\n                    step = {this.state.step}\r\n                    next = {this.advanceOperationStepFromTooltips} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.advanceOperationStep();\r\n    }\r\n\r\n    /* Handle calling function to perform animations for a given operation */\r\n\r\n    performOperationStep() {\r\n        switch( this.state.operation ) {\r\n            case 'Generate':    this.GenerateTree();   break;\r\n            case 'Reset':       this.ResetTree();      break;\r\n            case 'Insert':      this.InsertInTree();   break;\r\n            case 'Remove':      this.RemoveFromTree(); break; \r\n            case 'Search':      this.SearchTree();     break;\r\n            case 'Pre-Order':\r\n            case 'In-Order':\r\n            case 'Post-Order':\r\n            case 'Level Order': this.TraverseTree();   break;\r\n            case 'Initial':\r\n            default:            this.InitialTree();    break;\r\n        }\r\n    }\r\n\r\n    /* Advances operation step asynchonously based on timeout set */\r\n    \r\n    advanceOperationStep() {\r\n        if ( this.state.operation !== this.initialStateOperation ) {\r\n            if ( this.state.step >= this.operationSteps[ this.state.operation ].length - 1 ) {\r\n                if ( ! this.waiting ) {\r\n                    let _this = this;\r\n                    _this.waiting = true;\r\n                    setTimeout(function() {\r\n                        _this.waiting = false;\r\n                        if ( ! _this.state.tooltips || (_this.state.operation === 'Generate') || (_this.state.operation === 'Reset') ) {\r\n                            _this.setState({ operation: 'Initial', step: 0 });\r\n                        }\r\n                    }, _this.timeout);\r\n                }\r\n            }\r\n            else {\r\n                if ( this.operationSteps[ this.state.operation ][ this.state.step ] === 'Input' ) return;\r\n\r\n                if ( ! this.waiting ) {\r\n                    let _this = this;\r\n                    _this.waiting = true;\r\n                    setTimeout(function() {\r\n                        _this.waiting = false;\r\n                        if ( ! _this.state.tooltips || (_this.state.operation === 'Generate') || (_this.state.operation === 'Reset') ) {\r\n                            _this.setState({ step: _this.state.step + 1 });\r\n                        }\r\n                    }, _this.timeout);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    advanceOperationStepFromTooltips() {\r\n        if ( this.state.step >= this.operationSteps[ this.state.operation ].length - 1 ) {\r\n            this.setState({ operation: 'Initial', step: 0 });\r\n        }\r\n        else {\r\n            this.setState({ step: this.state.step + 1 });\r\n        }\r\n    }\r\n\r\n    /* Basic internal tree operations */\r\n\r\n    insertNumElements(elements) {\r\n        for (let i = 0; i < elements; ++i) {\r\n            let val = randomIntFromInverval(1, 150);\r\n            if ( this.insert( val ) ) {\r\n                if ( this.height() > 5 ) {\r\n                    this.root = this.remove( val );\r\n                    --i;\r\n                }\r\n            }\r\n            else {\r\n                --i;\r\n            }\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.root = null;\r\n    }\r\n\r\n    height(node = this.root) {\r\n        if (node === null) return 0;\r\n        return Math.max( this.height(node.left), this.height(node.right) ) + 1;\r\n    }\r\n\r\n    contains(val, node = this.root) {\r\n        if ( ! node ) return false;\r\n\r\n        if (val < node.value) {\r\n            return this.contains(val, node.left);\r\n        }\r\n        else if (val > node.value) {\r\n            return this.contains(val, node.right);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    insert(val) {\r\n        if (this.root === null) {\r\n            this.root = new BinarySearchTreeNode(val);\r\n            return true;\r\n        }\r\n        \r\n        let curr = this.root;\r\n\r\n        while (true) {\r\n            if (curr.value === val) {\r\n                //tree contains key already\r\n                return false;\r\n            }\r\n            else if (curr.value < val) {\r\n                if(curr.right === null) {\r\n                    curr.right = new BinarySearchTreeNode(val);\r\n                    return true;\r\n                }\r\n                curr = curr.right;\r\n            }\r\n            else {\r\n                if(curr.left === null) {\r\n                    curr.left = new BinarySearchTreeNode(val);\r\n                    return true;\r\n                }\r\n                curr = curr.left;\r\n            }\r\n        }\r\n    }\r\n\r\n    remove(val, node = this.root) {\r\n        if ( ! val ) return;\r\n\r\n        if ( node === null ) return node;\r\n\r\n        if ( val < node.value ) {\r\n            node.left = this.remove(val, node.left);\r\n        }\r\n        else if ( val > node.value ) {\r\n            node.right = this.remove(val, node.right);\r\n        }\r\n        else {\r\n            if ( node.left === null ) {\r\n                return node.right;\r\n            }\r\n            else if ( node.right === null ) {\r\n                return node.left;\r\n            }\r\n            else {\r\n                node.value = this.inOrderSuccessor(node.right);\r\n                node.right = this.remove(node.value, node.right);\r\n            }\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    inOrderSuccessor(node) {\r\n        if ( node.left !== null ) {\r\n            return this.inOrderSuccessor(node.left);\r\n        }\r\n        else {\r\n            return node.value;\r\n        }\r\n    }\r\n\r\n    getScaleFactor() {\r\n        let scale_factor = (window.innerWidth - 20) / ( Math.pow(2, this.height() - 1) * 70 );\r\n        return 'scale(' + (scale_factor > 1 ? 1 : scale_factor) + ')';\r\n    }\r\n\r\n    /* Handle creating Tree nodes and lines in DOM */\r\n\r\n    Tree(node = this.root, tree_height = this.height(), curr_height = 0, pos = 'root') {\r\n        if (curr_height === tree_height) return null;\r\n\r\n        const leftChild  = this.Tree(node ? node.left  : null, tree_height, curr_height + 1, 'left');\r\n        const rightChild = this.Tree(node ? node.right : null, tree_height, curr_height + 1, 'right');\r\n        \r\n        const classes = ['node-wrapper', pos].join(' ');\r\n\r\n        if ( node === null ) {\r\n            return (\r\n                <>\r\n                    <div\r\n                        className={classes}\r\n                        node-value='null'>\r\n\r\n                            <div className='node-value' />\r\n\r\n                            {leftChild}\r\n                            {rightChild}\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        else {\r\n            const rootWidth = {\r\n                width: ( node === this.root ) ? Math.pow(2, tree_height - 1) * 70 + 'px' : null\r\n            };\r\n\r\n            return (\r\n                <>\r\n                    <Transition\r\n                        in={node.moveAnimations['active']}\r\n                        timeout={node.moveAnimations['delay']}\r\n                        appear={true}>\r\n\r\n                        {state => (\r\n\r\n                            <div\r\n                                className={classes}\r\n                                node-value={node.value}\r\n                                node-layer={tree_height - curr_height}\r\n                                style={( node === this.root && ! node.moveAnimations['active'] ) ? rootWidth : node.moveAnimations['css'][state]}>\r\n\r\n                                <CSSTransition\r\n                                    in={node.animations['initial']['node']['active']}\r\n                                    timeout={node.animations['initial']['node']['delay']}\r\n                                    classNames={this.visibleClasses}\r\n                                    appear={true}>\r\n\r\n                                    <div className='node-value'>\r\n                                        {this.getNodeHover(node.value)}\r\n                                        {this.getCricle(node)}\r\n                                    </div>\r\n\r\n                                </CSSTransition>\r\n\r\n                                {leftChild}\r\n                                {rightChild}\r\n\r\n                                {this.getConnectingLine(node, pos)}\r\n\r\n                            </div>\r\n                        )}\r\n\r\n                    </Transition>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    getCricle(node) {\r\n        return (\r\n            <>\r\n                <svg className='circle node-value-circle' xmlns='http://www.w3.org/2000/svg'>\r\n\r\n                    <circle className='circle node-circle initial' r='24' cx='25' cy='25' fill='none' />\r\n\r\n                    <CSSTransition\r\n                        in={node.animations['visited']['node']['active']}\r\n                        timeout={node.animations['visited']['node']['delay']}\r\n                        classNames={this.visibleClasses}\r\n                        appear={true}>\r\n\r\n                        <svg className='circle node-circle-traversal' xmlns='http://www.w3.org/2000/svg'>\r\n                            <circle className='circle node-circle-background visited' r='24' cx='25' cy='25' fill='none' />\r\n                            <circle className='circle node-circle visited' r='24' cx='25' cy='25' fill='none' />\r\n                        </svg>\r\n\r\n                    </CSSTransition>\r\n\r\n                    <CSSTransition\r\n                        in={node.animations['success']['node']['active']}\r\n                        timeout={node.animations['success']['node']['delay']}\r\n                        classNames={this.visibleClasses}\r\n                        appear={true}>\r\n\r\n                        <svg className='circle node-circle-traversal' xmlns='http://www.w3.org/2000/svg'>\r\n                            <circle className='circle node-circle-background success' r='24' cx='25' cy='25' fill='none' />\r\n                            <circle className='circle node-circle success' r='24' cx='25' cy='25' fill='none' />\r\n                        </svg>\r\n\r\n                    </CSSTransition>\r\n\r\n                    <CSSTransition\r\n                        in={node.animations['removed']['node']['active']}\r\n                        timeout={node.animations['removed']['node']['delay']}\r\n                        classNames={this.visibleClasses}\r\n                        appear={true}>\r\n\r\n                        <svg className='circle node-circle-traversal' xmlns='http://www.w3.org/2000/svg'>\r\n                            <circle className='circle node-circle-background removed' r='24' cx='25' cy='25' fill='none' />\r\n                            <circle className='circle node-circle removed' r='24' cx='25' cy='25' fill='none' />\r\n                        </svg>\r\n\r\n                    </CSSTransition>\r\n                    \r\n                    <text className='text node-value-text' x='50%' y='50%' fill='black' textAnchor='middle' dominantBaseline='central'>\r\n                        {node.value}\r\n                    </text>\r\n\r\n                </svg>\r\n            </>\r\n        );\r\n    }\r\n\r\n    getNodeHover(val) {\r\n        return (\r\n            <>\r\n                <span className='node-hover'>\r\n                    <i className='fas fa-search' onClick={() => this.searchNode(val)} />\r\n                    <span className='search'>\r\n                        <svg className='circle' xmlns='http://www.w3.org/2000/svg'>\r\n                            <circle className='circle node-hover-circle' r='24' cx='25' cy='25' fill='none' />\r\n                        </svg>\r\n                    </span>\r\n\r\n                    <i className='fas fa-trash' onClick={() => this.deleteNode(val)} />\r\n                    <span className='trash'>\r\n                        <svg className='circle' xmlns='http://www.w3.org/2000/svg'>\r\n                            <circle className='circle node-hover-circle' r='24' cx='25' cy='25' fill='none' />\r\n                        </svg>\r\n                    </span>\r\n                </span>\r\n            </>\r\n        );\r\n    }\r\n    \r\n    getConnectingLine(node, pos) {\r\n        if (pos === 'left' || pos === 'right') {\r\n            return (\r\n                <>\r\n                    <CSSTransition\r\n                        in={node.animations['initial']['line']['active']}\r\n                        timeout={node.animations['initial']['line']['delay']}\r\n                        classNames={this.visibleClasses}\r\n                        appear={true}>\r\n\r\n                        <svg className='line node-line' xmlns='http://www.w3.org/2000/svg'>\r\n\r\n                            {this.getLine(pos, 'initial')}\r\n\r\n                            <CSSTransition\r\n                                in={node.animations['visited']['line']['active']}\r\n                                timeout={node.animations['visited']['line']['delay']}\r\n                                classNames={this.visibleClasses}\r\n                                appear={true}>\r\n\r\n                                {this.getLine(pos, 'visited')}\r\n\r\n                            </CSSTransition>\r\n\r\n                            <CSSTransition\r\n                                in={node.animations['success']['line']['active']}\r\n                                timeout={node.animations['success']['line']['delay']}\r\n                                classNames={this.visibleClasses}\r\n                                appear={true}>\r\n\r\n                                {this.getLine(pos, 'success')}\r\n\r\n                            </CSSTransition>\r\n\r\n                            <CSSTransition\r\n                                in={node.animations['removed']['line']['active']}\r\n                                timeout={node.animations['removed']['line']['delay']}\r\n                                classNames={this.visibleClasses}\r\n                                appear={true}>\r\n\r\n                                {this.getLine(pos, 'removed')}\r\n\r\n                            </CSSTransition>\r\n\r\n                        </svg>\r\n\r\n                    </CSSTransition>\r\n                </>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getLine(pos, addClass) {\r\n        const classes = ['line', addClass].join(' ');\r\n\r\n        if (pos === 'left')\r\n            return ( <line className={classes} x1='0' y1='50' x2='100%' y2='0' /> );\r\n        else if (pos === 'right')\r\n            return ( <line className={classes} x1='0' y1='0' x2='100%' y2='50' /> );\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /* Handle operation step */\r\n\r\n    InitialTree() {\r\n        this.removeValue = null;\r\n        this.targetValue = null;\r\n        this.targetNode = null;\r\n        this.timeout = 0;\r\n        this.input = false;\r\n        this.waiting = false;\r\n\r\n        this.setHideTraversalAnimations();\r\n        this.setHideMoveAnimations();\r\n\r\n        if ( document.querySelector('.moved') ) {\r\n            document.querySelector('.moved').classList.remove('moved');\r\n        }\r\n    }\r\n\r\n    GenerateTree() {\r\n        switch( this.operationSteps[ this.state.operation ][ this.state.step ] ) {\r\n            case 'Reset':\r\n                if (this.root) {\r\n                    this.setHideAnimations();\r\n                    this.timeout = 1000;\r\n                }\r\n                else {\r\n                    this.timeout = 0;\r\n                }\r\n                break;\r\n            case 'Generate':\r\n                this.reset();\r\n                this.insertNumElements(15);\r\n                this.setGenerationAnimations();\r\n                break;\r\n            default:\r\n                this.InitialTree();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    ResetTree() {\r\n        switch( this.operationSteps[ this.state.operation ][ this.state.step ] ) {\r\n            case 'Hide':\r\n                if (this.root) {\r\n                    this.setHideAnimations();\r\n                    this.timeout = 1000;\r\n                }\r\n                else {\r\n                    this.timeout = 0;\r\n                }\r\n                break;\r\n            case 'Reset':\r\n                this.reset();\r\n                this.timeout = 0;\r\n                break;\r\n            default:\r\n                this.InitialTree();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    InsertInTree(val) {\r\n        switch( this.operationSteps[ this.state.operation ][ this.state.step ] ) {\r\n            case 'Input':\r\n                this.input = true;\r\n                break;\r\n            case 'Insert':\r\n                if ( this.targetValue ) {\r\n                    if ( ! this.contains(this.targetValue) ) {\r\n                        this.insert(this.targetValue);\r\n                        this.timeout = this.setInsertAnimations();\r\n                    }\r\n                    else {\r\n                        this.targetValue = null;\r\n                        this.errorMessage['message'] = 'Error: Tree already contains element';\r\n                        this.errorMessage['key'] = new Date().getTime();\r\n                    }\r\n                }\r\n                break;\r\n            case 'Complete':\r\n                if ( this.targetValue ) {\r\n                    this.setInsertionCompleteAnimations();\r\n                    this.timeout = 5000;\r\n                }\r\n                break;\r\n            default:\r\n                this.InitialTree();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    RemoveFromTree() {\r\n        switch( this.operationSteps[ this.state.operation ][ this.state.step ] ) {\r\n            case 'Input':\r\n                if ( this.root ) {\r\n                    this.input = true;\r\n                }\r\n                else {\r\n                    this.errorMessage['message'] = 'Error: Tree is empty';\r\n                    this.errorMessage['key'] = new Date().getTime();\r\n                }\r\n                break;\r\n            case 'Remove 1':\r\n                if ( this.targetValue ) {\r\n                    if ( this.contains(this.targetValue) ) {\r\n                        this.timeout = this.setRemoveAnimations() + 3000;\r\n                    }\r\n                    else {\r\n                        this.targetValue = null;\r\n                        this.errorMessage['message'] = 'Error: Tree does not contain element';\r\n                        this.errorMessage['key'] = new Date().getTime(); \r\n                    }\r\n                }\r\n                break;\r\n            case 'Remove 2':\r\n                if ( this.targetValue ) {\r\n                    this.timeout = this.setMoveSubtreeAnimations() + 3000;\r\n                }\r\n                break;\r\n            case 'Remove 3':\r\n                if ( this.targetValue ) {\r\n                    if ( this.targetNode ) {\r\n                        this.timeout = this.setRemoveAnimations() + 3000;\r\n                    }\r\n                    else {\r\n                        this.timeout = 0;\r\n                    }\r\n                }\r\n                break;\r\n            case 'Remove 4':\r\n                if ( this.targetValue ) {\r\n                    if ( this.targetNode ) {\r\n                        this.timeout = this.setMoveSubtreeAnimations() + 3000;\r\n                    }\r\n                    else {\r\n                        this.timeout = 0;\r\n                    }\r\n                }\r\n                break;\r\n            case 'Complete':\r\n                if ( this.targetValue ) {\r\n                    this.root = this.remove(this.removeValue);\r\n                    this.setHideMoveAnimations();\r\n                    this.setHideTraversalAnimations();\r\n                    document.querySelector('.root').classList.add('moved');\r\n                    this.timeout = 2000;\r\n                }\r\n                break;\r\n            default:\r\n                this.InitialTree();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    SearchTree() {\r\n        switch( this.operationSteps[ this.state.operation ][ this.state.step ] ) {\r\n            case 'Input':\r\n                if ( this.root ) {\r\n                    this.input = true;\r\n                }\r\n                else {\r\n                    this.errorMessage['message'] = 'Error: Tree is empty';\r\n                    this.errorMessage['key'] = new Date().getTime();\r\n                }\r\n                break;\r\n            case 'Search':\r\n                if ( this.targetValue ) {\r\n                    this.timeout = this.setSearchAnimations() + 7000;\r\n\r\n                    if ( ! this.contains(this.targetValue) ) {\r\n                        let _this = this;\r\n                        setTimeout(function() {\r\n                            _this.errorMessage['message'] = 'Tree does not contain element';\r\n                            _this.errorMessage['key'] = new Date().getTime();\r\n                            _this.forceUpdate();\r\n                        }, _this.timeout - 6000);\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                this.InitialTree();\r\n                break;\r\n        }\r\n    }\r\n\r\n    TraverseTree() {\r\n        if ( this.root ) {\r\n            switch( this.state.operation ) {\r\n                case 'Pre-Order':\r\n                case 'In-Order':\r\n                case 'Post-Order':\r\n                    this.timeout = this.setDFSTraversalAnimations( this.state.operation ) + 5000;\r\n                    break;\r\n                case 'Level Order':\r\n                    this.timeout = this.setBFSTraversalAnimations() + 5000;\r\n                    break;\r\n                default:\r\n                    this.InitialTree();\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            this.errorMessage['message'] = 'Error: Tree is empty';\r\n            this.errorMessage['key'] = new Date().getTime();\r\n        }\r\n    }\r\n\r\n    /* Node hover operations and input dialog */\r\n\r\n    receiveInput(val) {\r\n        this.targetValue = val;\r\n        this.input = false;\r\n\r\n        if ( this.state.operation === 'Remove' ){\r\n            this.deleteNode(val);\r\n        }\r\n        else {\r\n            this.setState({ step: this.state.step + 1 });\r\n        }\r\n    }\r\n\r\n    searchNode(val) {\r\n        this.targetValue = val;\r\n        this.setState({ operation: 'Search', step: 1 });\r\n    }\r\n\r\n    deleteNode(val) {\r\n        this.targetValue = val;\r\n        this.removeValue = val;\r\n        this.targetNode = this.root;\r\n        this.setState({ operation: 'Remove', step: 1 });\r\n    }\r\n\r\n    /* Set animations for nodes for given operation step */\r\n\r\n    setGenerationAnimations() {\r\n        let queue = new Queue();\r\n        queue.push(this.root);\r\n\r\n        let delay = 150;\r\n\r\n        while ( ! queue.empty() ) {\r\n            let node = queue.front();\r\n\r\n            if (node) {\r\n                queue.push(node.left);\r\n                queue.push(node.right);\r\n\r\n                for (let key in node.animations['initial']) {\r\n                    node.animations['initial'][key]['active'] = true;\r\n                    node.animations['initial'][key]['delay'] = delay;\r\n                }\r\n                \r\n                delay += 200;\r\n            }\r\n        }\r\n    }\r\n\r\n    setHideAnimations(node = this.root) {\r\n        if (node === null) return;\r\n\r\n        for (let state in node.animations) {\r\n            for (let element in node.animations[state]) {\r\n                node.animations[state][element]['active'] = false;\r\n                node.animations[state][element]['delay'] = 150;\r\n            }\r\n        }\r\n\r\n        this.setHideAnimations(node.left);\r\n        this.setHideAnimations(node.right);\r\n    }\r\n\r\n    setHideTraversalAnimations(node = this.root) {\r\n        if (node === null) return;\r\n\r\n        for (let state in node.animations) {\r\n            for (let element in node.animations[state]) {\r\n                if (state === 'initial') {\r\n                    node.animations[state][element]['active'] = true;\r\n                    node.animations[state][element]['delay'] = 0;\r\n                }\r\n                else {\r\n                    node.animations[state][element]['active'] = false;\r\n                    node.animations[state][element]['delay'] = 150;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setHideTraversalAnimations(node.left);\r\n        this.setHideTraversalAnimations(node.right);\r\n    }\r\n\r\n    setHideMoveAnimations(node = this.root) {\r\n        if (node === null) return;\r\n\r\n        node.moveAnimations['active'] = false;\r\n        node.moveAnimations['delay'] = 0;\r\n        node.moveAnimations['css'] = {\r\n            entering: {},\r\n            entered:  {},\r\n            exiting:  {},\r\n            exited:   {}\r\n        };\r\n\r\n        this.setHideMoveAnimations(node.left);\r\n        this.setHideMoveAnimations(node.right);\r\n    }\r\n\r\n    setDFSTraversalAnimations(order, node = this.root, delay = 150) {\r\n        if (node === null) return delay;\r\n\r\n        let _delay = node === this.root ? delay : delay + 1000;\r\n\r\n        node.animations['visited']['node']['active'] = true;\r\n        node.animations['visited']['node']['delay'] = _delay + 500;\r\n        node.animations['visited']['line']['active'] = true;\r\n        node.animations['visited']['line']['delay'] = _delay;\r\n\r\n        if (order === 'Pre-Order') {\r\n            _delay += 1000;\r\n            node.animations['success']['node']['active'] = true;\r\n            node.animations['success']['node']['delay'] = _delay;\r\n        }\r\n\r\n        _delay = this.setDFSTraversalAnimations(order, node.left, _delay);\r\n\r\n        if (order === 'In-Order') {\r\n            _delay += 1000;\r\n            node.animations['success']['node']['active'] = true;\r\n            node.animations['success']['node']['delay'] = _delay;\r\n        }\r\n\r\n        _delay = this.setDFSTraversalAnimations(order, node.right, _delay);\r\n\r\n        if (order === 'Post-Order') {\r\n            _delay += 1000;\r\n            node.animations['success']['node']['active'] = true;\r\n            node.animations['success']['node']['delay'] = _delay;\r\n        }\r\n\r\n        node.animations['success']['line']['active'] = true;\r\n        node.animations['success']['line']['delay'] = _delay;\r\n\r\n        return _delay;\r\n    }\r\n\r\n    setBFSTraversalAnimations() {\r\n        let queue = new Queue();\r\n\r\n        let delay = 150;\r\n\r\n        if (this.root) {\r\n            queue.push(this.root);\r\n\r\n            this.root.animations['visited']['node']['active'] = true;\r\n            this.root.animations['visited']['node']['delay'] = delay;\r\n        }\r\n\r\n        while ( ! queue.empty() ) {\r\n            let node = queue.front();\r\n\r\n            if (node) {\r\n                if (node.left) {\r\n                    queue.push(node.left);\r\n\r\n                    delay += 1000;\r\n                    for (let element in node.left.animations['visited']) {\r\n                        node.left.animations['visited'][element]['active'] = true;\r\n                        node.left.animations['visited'][element]['delay'] = delay;\r\n                    }\r\n                }\r\n\r\n                if (node.right) {\r\n                    queue.push(node.right);\r\n\r\n                    delay += 1000;\r\n                    for (let element in node.right.animations['visited']) {\r\n                        node.right.animations['visited'][element]['active'] = true;\r\n                        node.right.animations['visited'][element]['delay'] = delay;\r\n                    }\r\n                }\r\n                \r\n                delay += 1000;\r\n                for (let element in node.animations['success']) {\r\n                    node.animations['success'][element]['active'] = true;\r\n                    node.animations['success'][element]['delay'] = delay;\r\n                }\r\n            }\r\n        }\r\n\r\n        return delay;\r\n    }\r\n\r\n    setSearchAnimations(node = this.root, delay = 150) {\r\n        if ( ! this.targetValue || ! node ) return delay;\r\n        else {\r\n            let _delay = delay;\r\n\r\n            if (this.targetValue === node.value) {\r\n                node.animations['success']['node']['active'] = true;\r\n                node.animations['success']['node']['delay'] = delay + 1250;\r\n            }\r\n            else if (this.targetValue < node.value)\r\n                _delay = this.setSearchAnimations(node.left, delay + 1000);\r\n            else\r\n                _delay = this.setSearchAnimations(node.right, delay + 1000);\r\n                \r\n            node.animations['visited']['node']['active'] = true;\r\n            node.animations['visited']['node']['delay'] = delay + 500;\r\n            node.animations['visited']['line']['active'] = true;\r\n            node.animations['visited']['line']['delay'] = delay;\r\n\r\n            return _delay;\r\n        }\r\n    }\r\n\r\n    setInsertAnimations(node = this.root, delay = 150) {\r\n        if ( ! this.targetValue || ! node ) return delay;\r\n        else {\r\n            let _delay = delay;\r\n\r\n            if (this.targetValue === node.value) {\r\n                this.targetNode = node;\r\n                return _delay;\r\n            }\r\n            else if (this.targetValue < node.value)\r\n                _delay = this.setInsertAnimations(node.left, delay + 1000);\r\n            else\r\n                _delay = this.setInsertAnimations(node.right, delay + 1000);\r\n                \r\n            node.animations['visited']['node']['active'] = true;\r\n            node.animations['visited']['node']['delay'] = delay + 500;\r\n            node.animations['visited']['line']['active'] = true;\r\n            node.animations['visited']['line']['delay'] = delay;\r\n\r\n            return _delay;\r\n        }\r\n    }\r\n\r\n    setInsertionCompleteAnimations() {\r\n        let node = this.targetNode;\r\n\r\n        if ( node ) {\r\n            node.animations['initial']['node']['active'] = true;\r\n            node.animations['initial']['node']['delay'] = 650;\r\n            node.animations['initial']['line']['active'] = true;\r\n            node.animations['initial']['line']['delay'] = 150;\r\n            node.animations['success']['node']['active'] = true;\r\n            node.animations['success']['node']['delay'] = 1250;\r\n        }\r\n    }\r\n\r\n    setRemoveAnimations(node = this.targetNode, delay = 150) {\r\n        if ( ! this.targetValue || ! node ) return delay;\r\n        else {    \r\n            node.animations['visited']['node']['active'] = true;\r\n            node.animations['visited']['node']['delay'] = delay + 500;\r\n            node.animations['visited']['line']['active'] = true;\r\n            node.animations['visited']['line']['delay'] = delay;\r\n\r\n            if (this.targetValue === node.value) {\r\n                node.animations['success']['node']['active'] = false;\r\n                node.animations['success']['node']['delay'] = delay;\r\n                node.animations['success']['line']['active'] = false;\r\n                node.animations['success']['line']['delay'] = delay;\r\n\r\n                node.animations['removed']['node']['active'] = true;\r\n                node.animations['removed']['node']['delay'] = delay + 1500;\r\n                node.animations['removed']['line']['active'] = true;\r\n                node.animations['removed']['line']['delay'] = delay + 1000;\r\n\r\n                node.animations['initial']['node']['active'] = false;\r\n                node.animations['initial']['node']['delay'] = delay + 1500;\r\n                node.animations['initial']['line']['active'] = false;\r\n                node.animations['initial']['line']['delay'] = delay + 1500;\r\n\r\n                this.targetNode = node;\r\n            }\r\n            else if (this.targetValue < node.value)\r\n                return this.setRemoveAnimations(node.left, delay + 1000);\r\n            else\r\n                return this.setRemoveAnimations(node.right, delay + 1000);\r\n\r\n            return delay;\r\n        }\r\n    }\r\n\r\n    setMoveSubtreeAnimations() {\r\n        let node = this.targetNode;\r\n        let _delay = 0;\r\n\r\n        if ( node ) {\r\n            if ( node.left === null || node.right === null ) {\r\n                node.animations['initial']['line']['active'] = true;\r\n                node.animations['initial']['line']['delay'] = 3000;\r\n    \r\n                node.animations['visited']['node']['active'] = false;\r\n                node.animations['visited']['node']['delay'] = 150;\r\n                node.animations['visited']['line']['active'] = false;\r\n                node.animations['visited']['line']['delay'] = 150;\r\n    \r\n                node.animations['removed']['node']['active'] = false;\r\n                node.animations['removed']['node']['delay'] = 150;\r\n                node.animations['removed']['line']['active'] = false;\r\n                node.animations['removed']['line']['delay'] = 150;\r\n    \r\n                node.animations['success']['line']['active'] = true;\r\n                node.animations['success']['line']['delay'] = 3500;\r\n\r\n                if ( node.left === null && node.right === null ) {\r\n                    node.animations['initial']['line']['active'] = false;\r\n                    node.animations['initial']['line']['delay'] = 0;\r\n\r\n                    node.animations['success']['line']['active'] = false;\r\n                    node.animations['success']['line']['delay'] = 0;\r\n\r\n                    if (\r\n                        ( document.querySelectorAll('.node-wrapper[node-layer=\"1\"]').length === 1 ) && \r\n                        ( parseInt(document.querySelector('.node-wrapper[node-layer=\"1\"]').attributes['node-value'].value) === node.value )\r\n                    ) {\r\n                        this.root.moveAnimations['active'] = true;\r\n                        this.root.moveAnimations['delay'] = 1000;\r\n                        this.root.moveAnimations['css']['entering'] = {\r\n                            'width': document.querySelector('.root').offsetWidth + 'px'\r\n                        };\r\n                        this.root.moveAnimations['css']['entered'] = {\r\n                            'width': document.querySelector('.root').offsetWidth / 2 + 'px'\r\n                        };\r\n                    }\r\n                }\r\n                else {\r\n                    if ( node.left === null ) {\r\n                        node.right.animations['initial']['line']['active'] = false;\r\n                        node.right.animations['initial']['line']['delay'] = 150;\r\n                        \r\n                        node.right.moveAnimations['active'] = true;\r\n                        node.right.moveAnimations['delay'] = 1000;\r\n                        node.right.moveAnimations['css']['entered'] = {\r\n                            'width': '100%',\r\n                            'zIndex': '1000',\r\n                            'transform': 'translate(-50%, -50px)'\r\n                        };\r\n        \r\n                        _delay = this.setMoveSubtreeCompleteAnimations(node.right);\r\n                    }\r\n                    else if ( node.right === null ) {\r\n                        node.left.animations['initial']['line']['active'] = false;\r\n                        node.left.animations['initial']['line']['delay'] = 150;\r\n                        \r\n                        node.left.moveAnimations['active'] = true;\r\n                        node.left.moveAnimations['delay'] = 1000;\r\n                        node.left.moveAnimations['css']['entered'] = {\r\n                            'width': '100%',\r\n                            'zIndex': '1000',\r\n                            'transform': 'translate(0, -50px)'\r\n                        };\r\n        \r\n                        _delay = this.setMoveSubtreeCompleteAnimations(node.left);\r\n                    }\r\n\r\n                    if (\r\n                        document.querySelectorAll('.node-wrapper[node-value=\"' + node.value + '\"] .node-wrapper[node-layer=\"1\"]').length\r\n                        === document.querySelectorAll('.node-wrapper[node-layer=\"1\"]').length\r\n                    ) {\r\n                        this.root.moveAnimations['active'] = true;\r\n                        this.root.moveAnimations['delay'] = 1000;\r\n                        this.root.moveAnimations['css']['entering'] = {\r\n                            'width': document.querySelector('.root').offsetWidth + 'px'\r\n                        };\r\n                        this.root.moveAnimations['css']['entered'] = {\r\n                            'width': document.querySelector('.root').offsetWidth / 2 + 'px'\r\n                        };\r\n                    }\r\n                }\r\n\r\n                this.targetNode = null;\r\n            }\r\n            else {\r\n                let delay = this.setInOrderSuccessorAnimations(node.right);\r\n\r\n                delay += 1000;\r\n\r\n                node.animations['visited']['node']['active'] = false;\r\n                node.animations['visited']['node']['delay'] = delay;\r\n                node.animations['visited']['line']['active'] = false;\r\n                node.animations['visited']['line']['delay'] = delay;\r\n\r\n                node.animations['removed']['node']['active'] = false;\r\n                node.animations['removed']['node']['delay'] = delay;\r\n                node.animations['removed']['line']['active'] = false;\r\n                node.animations['removed']['line']['delay'] = delay;\r\n\r\n                delay += 1000;\r\n\r\n                node.animations['initial']['node']['active'] = true;\r\n                node.animations['initial']['node']['delay'] = delay;\r\n                node.animations['initial']['line']['active'] = true;\r\n                node.animations['initial']['line']['delay'] = delay + 500;\r\n\r\n                delay += 1000;\r\n\r\n                node.animations['success']['node']['active'] = true;\r\n                node.animations['success']['node']['delay'] = delay + 500;\r\n                node.animations['success']['line']['active'] = true;\r\n                node.animations['success']['line']['delay'] = delay;\r\n\r\n                _delay = delay;\r\n            }\r\n        }\r\n\r\n        return _delay;\r\n    }\r\n\r\n    setMoveSubtreeCompleteAnimations(node, delay = 4000, first = true) {\r\n        let _delay = delay;\r\n\r\n        if (node) {\r\n            if (first) {\r\n                node.animations['success']['node']['active'] = true;\r\n                node.animations['success']['node']['delay'] = delay;\r\n            }\r\n            else {\r\n                node.animations['success']['node']['active'] = true;\r\n                node.animations['success']['node']['delay'] = delay;\r\n                node.animations['success']['line']['active'] = true;\r\n                node.animations['success']['line']['delay'] = delay;\r\n            }\r\n\r\n            _delay = Math.max(\r\n                this.setMoveSubtreeCompleteAnimations(node.left, delay + 300, false), \r\n                this.setMoveSubtreeCompleteAnimations(node.right, delay + 300, false)\r\n            );\r\n        }\r\n\r\n        return _delay;\r\n    }\r\n\r\n    setInOrderSuccessorAnimations(node, delay = 150) {\r\n        node.animations['visited']['node']['active'] = true;\r\n        node.animations['visited']['node']['delay'] = delay + 500;\r\n        node.animations['visited']['line']['active'] = true;\r\n        node.animations['visited']['line']['delay'] = delay;\r\n\r\n        if ( node.left ) {\r\n            return this.setInOrderSuccessorAnimations(node.left, delay + 1000);\r\n        }\r\n        else {\r\n            node.animations['success']['node']['active'] = true;\r\n            node.animations['success']['node']['delay'] = delay + 1500;\r\n            node.animations['success']['line']['active'] = true;\r\n            node.animations['success']['line']['delay'] = delay + 1000;\r\n\r\n            document.querySelector('.node-wrapper[node-value=\"' + this.targetValue + '\"]>.node-value .node-value-text').textContent = node.value;\r\n\r\n            this.targetNode = node;\r\n            this.targetValue = node.value;\r\n\r\n            return delay + 1500;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}