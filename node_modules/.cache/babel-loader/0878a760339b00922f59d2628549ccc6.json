{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\src\\\\TreeVisualizer\\\\Tooltips\\\\Tooltips.jsx\";\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './Tooltips.scss';\nexport default class Tooltips extends React.Component {\n  constructor(props) {\n    super(props);\n    this.visibleClasses = {\n      appearDone: 'visible',\n      enterDone: 'visible',\n      exit: 'visible'\n    };\n    this.hiddenClasses = {\n      appearDone: 'visible',\n      enterDone: 'visible',\n      exit: 'hidden'\n    };\n    this.operationSteps = this.props.operationSteps;\n    this.next = this.props.next;\n    this.state = {\n      active: this.props.active,\n      timeout: this.props.timeout,\n      operations: {\n        current: {\n          operation: this.props.operation,\n          step: this.props.step\n        },\n        previous: {\n          operation: null,\n          step: null\n        }\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(newProps, state) {\n    if (state.operations.current.operation !== newProps.operation || state.operations.current.step !== newProps.step || state.active !== newProps.active) {\n      return {\n        active: newProps.active,\n        timeout: newProps.timeout,\n        operations: {\n          current: {\n            operation: newProps.operation,\n            step: newProps.step\n          },\n          previous: state.operations.current\n        }\n      };\n    } else {\n      return null;\n    }\n  }\n\n  getContent() {\n    return null;\n  }\n\n  getPreviousTooltips() {\n    return React.createElement(React.Fragment, null, React.createElement(CSSTransition, {\n      in: this.state.active,\n      timeout: 500,\n      classNames: this.hiddenClasses,\n      appear: true,\n      key: this.state.operations.current.operation + this.state.operations.current.step,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prev-tooltips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.getContent(this.state.operations.previous))));\n  }\n\n  getCurrentTooltips() {\n    return React.createElement(React.Fragment, null, React.createElement(CSSTransition, {\n      in: this.state.active,\n      timeout: 1500,\n      classNames: this.visibleClasses,\n      appear: true,\n      key: this.state.operations.current.operation + this.state.operations.current.step,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"curr-tooltips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.getContent(this.state.operations.current))));\n  }\n\n  getNextButton() {\n    return React.createElement(React.Fragment, null, React.createElement(CSSTransition, {\n      in: this.state.active,\n      timeout: this.state.timeout,\n      classNames: this.visibleClasses,\n      appear: true,\n      key: this.state.operations.current.operation + this.state.operations.current.step,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"tooltips-next\",\n      href: \"# \",\n      onClick: this.next,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Next step\", React.createElement(\"i\", {\n      className: \"fas fa-arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"next-underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))));\n  }\n\n  render() {\n    if (this.state.active) {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        id: \"tooltips\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.getPreviousTooltips(), this.getCurrentTooltips(), this.getNextButton()));\n    } else {\n      return null;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jonathan Kelaty/Desktop/tree-visualizer/src/TreeVisualizer/Tooltips/Tooltips.jsx"],"names":["React","CSSTransition","Tooltips","Component","constructor","props","visibleClasses","appearDone","enterDone","exit","hiddenClasses","operationSteps","next","state","active","timeout","operations","current","operation","step","previous","getDerivedStateFromProps","newProps","getContent","getPreviousTooltips","getCurrentTooltips","getNextButton","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport{ CSSTransition } from 'react-transition-group'\r\n\r\nimport './Tooltips.scss';\r\n\r\nexport default class Tooltips extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.visibleClasses = {\r\n            appearDone: 'visible',\r\n            enterDone: 'visible',\r\n            exit: 'visible'\r\n        };\r\n\r\n        this.hiddenClasses = {\r\n            appearDone: 'visible',\r\n            enterDone: 'visible',\r\n            exit: 'hidden'\r\n        };\r\n\r\n        this.operationSteps = this.props.operationSteps;\r\n        this.next = this.props.next;\r\n\r\n        this.state = {\r\n            active: this.props.active,\r\n            timeout: this.props.timeout,\r\n            operations: {\r\n                current: {\r\n                    operation: this.props.operation,\r\n                    step: this.props.step\r\n                },\r\n                previous: {\r\n                    operation: null,\r\n                    step: null\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(newProps, state) {\r\n        if (\r\n            state.operations.current.operation !== newProps.operation ||\r\n            state.operations.current.step !== newProps.step ||\r\n            state.active !== newProps.active\r\n        ) {\r\n            return {\r\n                active: newProps.active,\r\n                timeout: newProps.timeout,\r\n                operations: {\r\n                    current: {\r\n                        operation: newProps.operation,\r\n                        step: newProps.step\r\n                    },\r\n                    previous: state.operations.current\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getContent() {\r\n        return null;\r\n    }\r\n\r\n    getPreviousTooltips() {\r\n        return (\r\n            <>\r\n                <CSSTransition\r\n                    in={this.state.active}\r\n                    timeout={500}\r\n                    classNames={this.hiddenClasses}\r\n                    appear={true}\r\n                    key={this.state.operations.current.operation + this.state.operations.current.step}>\r\n\r\n                    <div className='prev-tooltips'>\r\n                        { this.getContent(this.state.operations.previous) }\r\n                    </div>\r\n\r\n                </CSSTransition>\r\n            </>\r\n        );\r\n    }\r\n\r\n    getCurrentTooltips() {\r\n        return (\r\n            <>\r\n                <CSSTransition\r\n                    in={this.state.active}\r\n                    timeout={1500}\r\n                    classNames={this.visibleClasses}\r\n                    appear={true}\r\n                    key={this.state.operations.current.operation + this.state.operations.current.step}>\r\n\r\n                    <div className='curr-tooltips'>\r\n                        { this.getContent(this.state.operations.current) }\r\n                    </div>\r\n\r\n                </CSSTransition>\r\n            </>\r\n        );\r\n    }\r\n\r\n    getNextButton() {\r\n        return (\r\n            <>\r\n                <CSSTransition\r\n                    in={this.state.active}\r\n                    timeout={this.state.timeout}\r\n                    classNames={this.visibleClasses}\r\n                    appear={true}\r\n                    key={this.state.operations.current.operation + this.state.operations.current.step}>\r\n\r\n                    <a\r\n                        className='tooltips-next'\r\n                        href='# '\r\n                        onClick={this.next}>\r\n                        Next step\r\n                        <i className=\"fas fa-arrow-right\" />\r\n                        <div className='next-underline' />\r\n                    </a>\r\n\r\n                </CSSTransition>\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if ( this.state.active ) {\r\n            return (\r\n                <>\r\n                    <div id='tooltips'>\r\n                        { this.getPreviousTooltips() }\r\n                        { this.getCurrentTooltips() }\r\n                        { this.getNextButton() }\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}