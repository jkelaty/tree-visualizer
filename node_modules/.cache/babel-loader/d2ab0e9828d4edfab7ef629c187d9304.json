{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\src\\\\TreeVisualizer\\\\Tooltips\\\\Tooltips.jsx\";\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './Tooltips.scss';\nexport default class Tooltips extends React.Component {\n  constructor(props) {\n    super(props);\n    this.visibleClasses = {\n      appearDone: 'visible',\n      enterDone: 'visible',\n      exit: 'visible'\n    };\n    this.state = {\n      active: this.props.active,\n      operation: this.props.operation,\n      step: this.props.step,\n      timeout: this.props.timeout,\n      operationSteps: this.props.operationSteps,\n      next: this.props.next\n    };\n  }\n\n  static getDerivedStateFromProps(newProps, state) {\n    if (state.active !== newProps.active || state.operation !== newProps.operation || state.step !== newProps.step) {\n      return {\n        active: newProps.active,\n        operation: newProps.operation,\n        step: newProps.step,\n        timeout: newProps.timeout\n      };\n    } else {\n      return null;\n    }\n  }\n\n  getContent() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Tooltips active\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.operation, \" : \", this.state.step));\n  }\n\n  nextButton() {\n    return React.createElement(React.Fragment, null, React.createElement(CSSTransition, {\n      in: this.state.active,\n      timeout: this.state.timeout,\n      classNames: this.visibleClasses,\n      appear: true,\n      key: this.state.operation + this.state.step,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"tooltips-next\",\n      href: \"# \",\n      onClick: this.state.next,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Next step\", React.createElement(\"i\", {\n      className: \"fas fa-arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"next-underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))));\n  }\n\n  render() {\n    if (this.state.active) {\n      //if ( this.state.timeout === 0 && this.state.operation !== 'Initial' ) this.props.next();\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        id: \"tooltips\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"prev-tooltips\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.getContent()), React.createElement(\"div\", {\n        className: \"curr-tooltips\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.getContent()), this.nextButton()));\n    } else {\n      return null;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jonathan Kelaty/Desktop/tree-visualizer/src/TreeVisualizer/Tooltips/Tooltips.jsx"],"names":["React","CSSTransition","Tooltips","Component","constructor","props","visibleClasses","appearDone","enterDone","exit","state","active","operation","step","timeout","operationSteps","next","getDerivedStateFromProps","newProps","getContent","nextButton","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport{ CSSTransition } from 'react-transition-group'\r\n\r\nimport './Tooltips.scss';\r\n\r\nexport default class Tooltips extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.visibleClasses = {\r\n            appearDone: 'visible',\r\n            enterDone: 'visible',\r\n            exit: 'visible'\r\n        };\r\n\r\n        this.state = {\r\n            active: this.props.active,\r\n            operation: this.props.operation,\r\n            step: this.props.step,\r\n            timeout: this.props.timeout,\r\n            operationSteps: this.props.operationSteps,\r\n            next: this.props.next\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(newProps, state) {\r\n        if ( state.active !== newProps.active || state.operation !== newProps.operation || state.step !== newProps.step ) {\r\n            return {\r\n                active: newProps.active,\r\n                operation: newProps.operation,\r\n                step: newProps.step,\r\n                timeout: newProps.timeout\r\n            };\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getContent() {\r\n        return (\r\n            <>\r\n                <div>Tooltips active</div>\r\n                <div>{this.state.operation} : {this.state.step}</div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    nextButton() {\r\n        return (\r\n            <>\r\n                <CSSTransition\r\n                    in={this.state.active}\r\n                    timeout={this.state.timeout}\r\n                    classNames={this.visibleClasses}\r\n                    appear={true}\r\n                    key={this.state.operation + this.state.step}>\r\n\r\n                    <a\r\n                        className='tooltips-next'\r\n                        href='# '\r\n                        onClick={this.state.next}>\r\n                        Next step\r\n                        <i className=\"fas fa-arrow-right\" />\r\n                        <div className='next-underline' />\r\n                    </a>\r\n\r\n                </CSSTransition>\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if ( this.state.active ) {\r\n            //if ( this.state.timeout === 0 && this.state.operation !== 'Initial' ) this.props.next();\r\n\r\n            return (\r\n                <>\r\n                    <div id='tooltips'>\r\n                        <div className='prev-tooltips'>\r\n                            { this.getContent() }\r\n                        </div>\r\n\r\n                        <div className='curr-tooltips'>\r\n                            { this.getContent() }\r\n                        </div>\r\n\r\n                        { this.nextButton() }\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}