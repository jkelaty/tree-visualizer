{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan Kelaty\\\\desktop\\\\TreeVisualizer\\\\tree-visualizer\\\\src\\\\TreeVisualizer\\\\TreeVisualizer.jsx\";\nimport React from 'react';\nimport './TreeVisualizer.css';\nexport default class TreeVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      title: \"test\"\n    };\n  }\n\n  render() {\n    const array = this.state.array;\n    return React.createElement(React.Fragment, null, array.map((value, idx) => React.createElement(\"div\", {\n      ClassName: \"array-bar\",\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.state.title)));\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 100; i++) {\n      array.push(randomIntFromInverval(5, 1000));\n    }\n\n    this.setState({\n      array: {\n        array\n      },\n      title: \"test2\"\n    });\n  }\n\n}\n\nfunction randomIntFromInverval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"sources":["C:/Users/Jonathan Kelaty/desktop/TreeVisualizer/tree-visualizer/src/TreeVisualizer/TreeVisualizer.jsx"],"names":["React","TreeVisualizer","Component","constructor","props","state","array","title","render","map","value","idx","componentDidMount","resetArray","i","push","randomIntFromInverval","setState","min","max","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AAEA,eAAe,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACEF,KADF,GACW,KAAKD,KADhB,CACEC,KADF;AAGL,WACI,0CACKA,KAAK,CAACG,GAAN,CAAU,CAACC,KAAD,EAAOC,GAAP,KACP;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,KAAL,CAAWE,KADhB,CADH,CADL,CADJ;AASH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL;AACH;;AAEDA,EAAAA,UAAU,GAAG;AACT,UAAMP,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BR,MAAAA,KAAK,CAACS,IAAN,CAAWC,qBAAqB,CAAC,CAAD,EAAG,IAAH,CAAhC;AACH;;AACD,SAAKC,QAAL,CAAe;AAAEX,MAAAA,KAAK,EAAE;AAACA,QAAAA;AAAD,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAf;AACH;;AAlCuD;;AAsC5D,SAASS,qBAAT,CAA+BE,GAA/B,EAAoCC,GAApC,EAAyC;AACrC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAED,GAAL,GAAW,CAA5B,IAAiCA,GAA5C,CAAP;AACH","sourcesContent":["import React from 'react';\r\nimport './TreeVisualizer.css';\r\n\r\nexport default class TreeVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            array: [],\r\n            title: \"test\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {array} = this.state;\r\n\r\n        return (\r\n            <>\r\n                {array.map((value,idx) => (\r\n                    <div ClassName=\"array-bar\" key={idx}>\r\n                        {this.state.title}\r\n                    </div> \r\n                ))}\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        const array = [];\r\n        for (let i = 0; i < 100; i++) {\r\n            array.push(randomIntFromInverval(5,1000));\r\n        }\r\n        this.setState( { array: {array}, title: \"test2\"} );\r\n    }\r\n\r\n}\r\n\r\nfunction randomIntFromInverval(min, max) {\r\n    return Math.floor(Math.random() * (max- min + 1) + min);\r\n}"]},"metadata":{},"sourceType":"module"}