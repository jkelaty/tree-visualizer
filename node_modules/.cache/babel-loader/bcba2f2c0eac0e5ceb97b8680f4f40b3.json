{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\TreeVisualizer\\\\tree-visualizer\\\\src\\\\TreeVisualizer\\\\NavigationBar\\\\NavigationBar.jsx\";\nimport React from 'react';\nimport logo from './logo.png';\nimport $ from 'jquery';\nimport '../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport './NavigationBar.css';\nexport default class NavigationBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.visualizer = this.props.visualizer;\n    this.trees = {\n      BST: \"Binary Search Tree\",\n      AVL: \"AVL Tree\",\n      RBT: \"Red-Black Tree\",\n      BHP: \"Binary Heap\"\n    };\n    this.operations = {\n      BST: [{\n        operation: \"Insert\",\n        callback: this.insert()\n      }, {\n        operation: \"Remove\",\n        callback: this.remove()\n      }, {\n        operation: \"Search\",\n        callback: this.search()\n      }],\n      AVL: [{\n        operation: \"Insert\",\n        callback: this.insert()\n      }, {\n        operation: \"Remove\",\n        callback: this.remove()\n      }, {\n        operation: \"Search\",\n        callback: this.search()\n      }],\n      RBT: [{\n        operation: \"Insert\",\n        callback: this.insert()\n      }, {\n        operation: \"Remove\",\n        callback: this.remove()\n      }, {\n        operation: \"Search\",\n        callback: this.search()\n      }],\n      BHP: [{\n        operation: \"Insert\",\n        callback: this.insert()\n      }, {\n        operation: \"Top\",\n        callback: this.top()\n      }]\n    };\n    this.state = {\n      active: \"BST\"\n    };\n    this.generateTree = this.generateTree.bind(this);\n    this.resetTree = this.resetTree.bind(this);\n    this.insert = this.insert.bind(this);\n    this.remove = this.remove.bind(this);\n    this.search = this.search.bind(this);\n    this.top = this.top.bind(this);\n  }\n\n  changeTree(tree_key, visualizer) {\n    this.setState({\n      active: tree_key\n    });\n    this.closeAllDropdowns();\n    visualizer.changeTree(tree_key);\n  }\n\n  generateTree() {\n    this.visualizer.generateNewTree();\n  }\n\n  resetTree() {\n    this.visualizer.resetTree();\n  }\n\n  insert() {\n    this.visualizer.insert(4);\n  }\n\n  remove() {}\n\n  search() {}\n\n  top() {}\n\n  performOperation(operation, visualizer) {\n    this.closeAllDropdowns();\n\n    if (this.operations[this.state.active].includes(operation)) {\n      switch (operation) {\n        case \"Insert\":\n          visualizer.insert(this.askInput(operation));\n          break;\n\n        case \"Remove\":\n          visualizer.remove(this.askInput(operation));\n          break;\n\n        case \"Find\":\n          visualizer.find(this.askInput(operation));\n          break;\n\n        case \"Top\":\n          visualizer.top();\n          break;\n      }\n    } else {//state error.. force update?\n    }\n  }\n\n  askInput(operation) {//return 4;\n  }\n\n  openDropdown(selector) {\n    this.closeAllDropdowns();\n    $('#' + selector).addClass('visible');\n  }\n\n  closeAllDropdowns() {\n    $('.dropdown').removeClass('visible');\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"navbar-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"tree-dropdown\",\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"dropdown-toggle\",\n      href: \"#\",\n      onClick: () => this.openDropdown(\"tree-dropdown\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.trees[this.state.active], React.createElement(\"i\", {\n      className: \"fa fa-caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, Object.keys(this.trees).map((key, idx) => React.createElement(\"li\", {\n      className: \"dropdown-menu-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: e => this.changeTree(key, this.visualizer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, this.trees[key]))))), React.createElement(\"div\", {\n      id: \"operations-dropdown\",\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"dropdown-toggle\",\n      href: \"#\",\n      onClick: () => this.openDropdown(\"operations-dropdown\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Operations\", React.createElement(\"i\", {\n      className: \"fa fa-caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.operations[this.state.active].map((value, idx) => React.createElement(\"li\", {\n      className: \"dropdown-menu-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: value[\"callback\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, value[\"operation\"]))))), React.createElement(\"div\", {\n      id: \"generate-tree\",\n      className: \"navbar-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.generateTree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Generate\")), React.createElement(\"div\", {\n      id: \"reset-tree\",\n      className: \"navbar-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.resetTree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Reset\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jonathan Kelaty/Desktop/TreeVisualizer/tree-visualizer/src/TreeVisualizer/NavigationBar/NavigationBar.jsx"],"names":["React","logo","$","NavigationBar","Component","constructor","props","visualizer","trees","BST","AVL","RBT","BHP","operations","operation","callback","insert","remove","search","top","state","active","generateTree","bind","resetTree","changeTree","tree_key","setState","closeAllDropdowns","generateNewTree","performOperation","includes","askInput","find","openDropdown","selector","addClass","removeClass","render","Object","keys","map","key","idx","e","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport logo from './logo.png'\r\nimport $ from 'jquery'\r\nimport '../../../node_modules/font-awesome/css/font-awesome.min.css';\r\nimport './NavigationBar.css';\r\n\r\nexport default class NavigationBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.visualizer = this.props.visualizer;\r\n        \r\n        this.trees = {\r\n            BST : \"Binary Search Tree\",\r\n            AVL : \"AVL Tree\",\r\n            RBT : \"Red-Black Tree\",\r\n            BHP : \"Binary Heap\"\r\n        };\r\n\r\n        this.operations = {\r\n            BST : [\r\n                {\r\n                    operation : \"Insert\",\r\n                    callback  : this.insert()\r\n                },\r\n                {\r\n                    operation : \"Remove\",\r\n                    callback  : this.remove()\r\n                },\r\n                {\r\n                    operation : \"Search\",\r\n                    callback  : this.search()\r\n                }\r\n                    ],\r\n            AVL : [\r\n                {\r\n                    operation : \"Insert\",\r\n                    callback  : this.insert()\r\n                },\r\n                {\r\n                    operation : \"Remove\",\r\n                    callback  : this.remove()\r\n                },\r\n                {\r\n                    operation : \"Search\",\r\n                    callback  : this.search()\r\n                }\r\n                    ],\r\n            RBT : [\r\n                {\r\n                    operation : \"Insert\",\r\n                    callback  : this.insert()\r\n                },\r\n                {\r\n                    operation : \"Remove\",\r\n                    callback  : this.remove()\r\n                },\r\n                {\r\n                    operation : \"Search\",\r\n                    callback  : this.search()\r\n                }\r\n                    ],\r\n            BHP : [\r\n                {\r\n                    operation : \"Insert\",\r\n                    callback  : this.insert()\r\n                },\r\n                {\r\n                    operation : \"Top\",\r\n                    callback  : this.top()\r\n                }\r\n                    ]\r\n        };\r\n\r\n        this.state = {\r\n            active: \"BST\"\r\n        };\r\n\r\n        this.generateTree = this.generateTree.bind(this);\r\n        this.resetTree    = this.resetTree.bind(this);\r\n        this.insert       = this.insert.bind(this);\r\n        this.remove       = this.remove.bind(this);\r\n        this.search       = this.search.bind(this);\r\n        this.top          = this.top.bind(this);\r\n    }\r\n\r\n    changeTree(tree_key, visualizer) {\r\n        this.setState(\r\n            { active: tree_key }\r\n        );\r\n\r\n        this.closeAllDropdowns();\r\n\r\n        visualizer.changeTree(tree_key);\r\n    }\r\n\r\n    generateTree() {\r\n        this.visualizer.generateNewTree();\r\n    }\r\n\r\n    resetTree() {\r\n        this.visualizer.resetTree();\r\n    }\r\n\r\n    insert() {\r\n        this.visualizer.insert( 4 );\r\n    }\r\n\r\n    remove() {\r\n\r\n    }\r\n\r\n    search() {\r\n\r\n    }\r\n\r\n    top() {\r\n\r\n    }\r\n\r\n    performOperation(operation, visualizer) {\r\n        this.closeAllDropdowns();\r\n\r\n        if ( this.operations[ this.state.active ].includes(operation) ) {\r\n            switch( operation ) {\r\n                case \"Insert\":\r\n                    visualizer.insert( this.askInput(operation) );\r\n                    break;\r\n                case \"Remove\":\r\n                    visualizer.remove( this.askInput(operation) );\r\n                    break;\r\n                case \"Find\":\r\n                    visualizer.find( this.askInput(operation) );\r\n                    break;\r\n                case \"Top\":\r\n                    visualizer.top();\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            //state error.. force update?\r\n        }\r\n    }\r\n\r\n    askInput(operation) {\r\n        //return 4;\r\n    }\r\n\r\n    openDropdown(selector) {\r\n        this.closeAllDropdowns();\r\n        $('#' + selector).addClass('visible');\r\n    }\r\n\r\n    closeAllDropdowns() {\r\n        $('.dropdown').removeClass('visible');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div id=\"navbar-wrapper\">\r\n                    <div className=\"navbar-logo\">\r\n                        <img src={logo} alt=\"logo\" />\r\n                    </div>\r\n                    \r\n                    <div id=\"tree-dropdown\" className=\"dropdown\">\r\n                        <a\r\n                            className=\"dropdown-toggle\"\r\n                            href=\"#\"\r\n                            onClick={() => this.openDropdown(\"tree-dropdown\")}>\r\n                            {this.trees[ this.state.active ]}\r\n                            <i className=\"fa fa-caret-down\"></i>\r\n                        </a>\r\n\r\n                        <ul className=\"dropdown-menu\">\r\n                            {Object.keys(this.trees).map((key, idx) => (\r\n                                <li className=\"dropdown-menu-option\">\r\n                                    <a\r\n                                        href=\"#\"\r\n                                        onClick={(e) => this.changeTree(key, this.visualizer)}>\r\n                                        {this.trees[key]}\r\n                                    </a>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div id=\"operations-dropdown\" className=\"dropdown\">\r\n                        <a\r\n                            className=\"dropdown-toggle\"\r\n                            href=\"#\"\r\n                            onClick={() => this.openDropdown(\"operations-dropdown\")}>\r\n                            Operations\r\n                            <i className=\"fa fa-caret-down\"></i>\r\n                        </a>\r\n\r\n                        <ul className=\"dropdown-menu\">\r\n                            {this.operations[ this.state.active ].map((value, idx) => (\r\n                                <li className=\"dropdown-menu-option\">\r\n                                    <a\r\n                                        href=\"#\"\r\n                                        onClick={value[\"callback\"]}>\r\n                                        {value[\"operation\"]}\r\n                                    </a>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div id=\"generate-tree\" className=\"navbar-button\">\r\n                        <button\r\n                            onClick={this.generateTree}>\r\n                            Generate\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div id=\"reset-tree\" className=\"navbar-button\">\r\n                        <button\r\n                            onClick={this.resetTree}>\r\n                            Reset\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}