{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\TreeVisualizer\\\\tree-visualizer\\\\src\\\\TreeVisualizer\\\\NavigationBar\\\\NavigationBar.jsx\";\nimport React from 'react';\nimport getHeaderLogo from '../Additional/headerLogo.jsx';\nimport '../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport './NavigationBar.scss';\nexport default class NavigationBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.visualizer = this.props.visualizer;\n    this.trees = {\n      BST: {\n        name: 'Binary Search Tree',\n        operations: ['Insert', 'Remove', 'Search', 'Traversals']\n      },\n      AVL: {\n        name: 'AVL Tree',\n        operations: ['Insert', 'Remove', 'Search']\n      },\n      RBT: {\n        name: 'Red-Black Tree',\n        operations: ['Insert', 'Remove', 'Search']\n      },\n      BHP: {\n        name: 'Binary Heap',\n        operations: ['Insert', 'Top']\n      }\n    };\n    this.traversals = ['Pre-Order', 'In-Order', 'Post-Order', 'Level Order'];\n    this.state = {\n      active_tree: this.visualizer.state.menu_key\n    };\n  }\n\n  static getDerivedStateFromProps(newProps, state) {\n    if (state.active_tree !== newProps.visualizer.state.menu_key) {\n      return {\n        active_tree: newProps.visualizer.state.menu_key\n      };\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"navbar-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, getHeaderLogo())), React.createElement(\"div\", {\n      id: \"tree-dropdown\",\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"dropdown-toggle\",\n      href: \"# \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.active_tree ? this.trees[this.state.active_tree]['name'] : 'Select..', React.createElement(\"i\", {\n      className: \"fa fa-caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, Object.keys(this.trees).map((key, idx) => React.createElement(\"li\", {\n      className: \"dropdown-menu-option\",\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"# \",\n      onClick: () => this.visualizer.changeTree(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.trees[key]['name']))))), this.state.active_tree && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"operations-dropdown\",\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"dropdown-toggle\",\n      href: \"# \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Operations\", React.createElement(\"i\", {\n      className: \"fa fa-caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.trees[this.state.active_tree]['operations'].map((operation, op_idx) => operation === 'Traversals' ? React.createElement(\"li\", {\n      id: \"traversals-submenu\",\n      className: \"dropdown-menu-option submenu\",\n      key: op_idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"submenu-toggle\",\n      href: \"# \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, operation, React.createElement(\"i\", {\n      className: \"fa fa-caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"dropdown-menu submenu-dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.traversals.map((traversal, tr_idx) => React.createElement(\"li\", {\n      className: \"dropdown-menu-option\",\n      key: tr_idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"# \",\n      onClick: () => this.visualizer.performOperation(traversal),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, traversal))))) : React.createElement(\"li\", {\n      className: \"dropdown-menu-option\",\n      key: op_idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"# \",\n      onClick: () => this.visualizer.performOperation(operation),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, operation))))), React.createElement(\"div\", {\n      id: \"generate-tree\",\n      className: \"navbar-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.visualizer.performOperation('Generate'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Generate\")), React.createElement(\"div\", {\n      id: \"reset-tree\",\n      className: \"navbar-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.visualizer.performOperation('Reset'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Reset\")), React.createElement(\"div\", {\n      id: \"tooltips-toggle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"tooltips-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Tooltips:\"), React.createElement(\"label\", {\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.visualizer.toggleTooltips,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider round\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"about-information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info-icon-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"about-dialogue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Project source code can be found \", React.createElement(\"a\", {\n      href: \"https://github.com/jkelaty/Tree-Visualizer\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"here\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Created by Jonathan Kelaty\"))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jonathan Kelaty/Desktop/TreeVisualizer/tree-visualizer/src/TreeVisualizer/NavigationBar/NavigationBar.jsx"],"names":["React","getHeaderLogo","NavigationBar","Component","constructor","props","visualizer","trees","BST","name","operations","AVL","RBT","BHP","traversals","state","active_tree","menu_key","getDerivedStateFromProps","newProps","render","Object","keys","map","key","idx","changeTree","operation","op_idx","traversal","tr_idx","performOperation","toggleTooltips"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport getHeaderLogo from '../Additional/headerLogo.jsx'\r\n\r\nimport '../../../node_modules/font-awesome/css/font-awesome.min.css';\r\nimport './NavigationBar.scss';\r\n\r\nexport default class NavigationBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.visualizer = this.props.visualizer;\r\n        \r\n        this.trees = {\r\n            BST : {\r\n                name : 'Binary Search Tree',\r\n                operations : [\r\n                    'Insert',\r\n                    'Remove',\r\n                    'Search',\r\n                    'Traversals'\r\n                ]\r\n            },\r\n            AVL : {\r\n                name : 'AVL Tree',\r\n                operations : [\r\n                    'Insert',\r\n                    'Remove',\r\n                    'Search'\r\n                ]\r\n            },\r\n            RBT : {\r\n                name : 'Red-Black Tree',\r\n                operations : [\r\n                    'Insert',\r\n                    'Remove',\r\n                    'Search'\r\n                ]\r\n            },\r\n            BHP : {\r\n                name : 'Binary Heap',\r\n                operations : [\r\n                    'Insert',\r\n                    'Top'\r\n                ]\r\n            },\r\n        };\r\n\r\n        this.traversals = [\r\n            'Pre-Order',\r\n            'In-Order',\r\n            'Post-Order',\r\n            'Level Order'\r\n        ];\r\n\r\n        this.state = {\r\n            active_tree: this.visualizer.state.menu_key\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(newProps, state) {\r\n        if ( state.active_tree !== newProps.visualizer.state.menu_key ) {\r\n            return { active_tree: newProps.visualizer.state.menu_key };\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div id='navbar-wrapper'>\r\n\r\n                    <div className='navbar-logo'>\r\n                        <a href='/'>\r\n                            {getHeaderLogo()}\r\n                        </a>\r\n                    </div>\r\n                    \r\n                    <div id='tree-dropdown' className='dropdown'>\r\n                        <a\r\n                            className='dropdown-toggle'\r\n                            href='# '>\r\n                            { this.state.active_tree ? this.trees[ this.state.active_tree ][ 'name' ] : 'Select..' }\r\n                            <i className='fa fa-caret-down'></i>\r\n                        </a>\r\n\r\n                        <ul className='dropdown-menu'>\r\n                            {Object.keys(this.trees).map((key, idx) => (\r\n                                <li className='dropdown-menu-option' key={idx}>\r\n                                    <a\r\n                                        href='# '\r\n                                        onClick={() => this.visualizer.changeTree(key)}>\r\n                                        {this.trees[ key ][ 'name' ]}\r\n                                    </a>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    { this.state.active_tree && (\r\n                        <>\r\n                            <div id='operations-dropdown' className='dropdown'>\r\n                                <a\r\n                                    className='dropdown-toggle'\r\n                                    href='# '>\r\n                                    Operations\r\n                                    <i className='fa fa-caret-down' />\r\n                                </a>\r\n\r\n                                <ul className='dropdown-menu'>\r\n                                    {this.trees[ this.state.active_tree ][ 'operations' ].map((operation, op_idx) => (\r\n\r\n                                        (operation === 'Traversals') ? (\r\n                                            <li id='traversals-submenu' className='dropdown-menu-option submenu' key={op_idx}>\r\n                                                <a\r\n                                                    className='submenu-toggle'\r\n                                                    href='# '>\r\n                                                    {operation}\r\n                                                    <i className='fa fa-caret-down' />\r\n                                                </a>\r\n\r\n                                                <ul className='dropdown-menu submenu-dropdown'>\r\n                                                    {this.traversals.map((traversal, tr_idx) => (\r\n                                                        <li className='dropdown-menu-option' key={tr_idx}>\r\n                                                            <a\r\n                                                                href='# '\r\n                                                                onClick={() => this.visualizer.performOperation(traversal)}>\r\n                                                                {traversal}\r\n                                                            </a>\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </li>\r\n                                        ) : (\r\n                                            <li className='dropdown-menu-option' key={op_idx}>\r\n                                                <a\r\n                                                    href='# '\r\n                                                    onClick={() => this.visualizer.performOperation(operation)}>\r\n                                                    {operation}\r\n                                                </a>\r\n                                            </li>\r\n                                        )\r\n\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        \r\n                            <div id='generate-tree' className='navbar-button'>\r\n                                <button\r\n                                    onClick={() => this.visualizer.performOperation('Generate')}>\r\n                                    Generate\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div id='reset-tree' className='navbar-button'>\r\n                                <button\r\n                                    onClick={() => this.visualizer.performOperation('Reset')}>\r\n                                    Reset\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div id='tooltips-toggle'>\r\n                                <span className='tooltips-text'>Tooltips:</span>\r\n                                <label className='switch'>\r\n                                    <input type='checkbox' onClick={this.visualizer.toggleTooltips} />\r\n                                    <span className='slider round' />\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div id=\"about-information\">\r\n                                <div className=\"info-icon-wrapper\">\r\n                                    <i className=\"fas fa-info\" />\r\n                                </div>\r\n\r\n                                <div className=\"about-dialogue\">\r\n                                    <p>Project source code can be found <a href='https://github.com/jkelaty/Tree-Visualizer' target='_blank' >here</a>\r\n                                    </p>\r\n                                    <p>Created by Jonathan Kelaty</p>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}