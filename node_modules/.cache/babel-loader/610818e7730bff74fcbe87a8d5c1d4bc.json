{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan Kelaty\\\\Desktop\\\\tree-visualizer\\\\src\\\\TreeVisualizer\\\\Tooltips\\\\Tooltips.jsx\";\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './Tooltips.scss';\nexport default class Tooltips extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialStateOperation = 'Initial';\n    this.visibleClasses = {\n      appearDone: 'visible',\n      enterDone: 'visible',\n      exit: 'visible'\n    };\n    this.hiddenClasses = {\n      appearActive: 'hiding',\n      enterActive: 'hiding',\n      appearDone: 'hidden',\n      enterDone: 'hidden'\n    };\n    this.operationSteps = this.props.operationSteps;\n    this.next = this.props.next;\n    this.state = {\n      active: this.props.active,\n      timeout: this.props.timeout,\n      operation: {\n        current: this.props.operation,\n        previous: this.props.operation\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(newProps, state) {\n    if (state.active !== newProps.active || state.operation.current !== newProps.operation) {\n      return {\n        active: newProps.active,\n        timeout: newProps.timeout,\n        operation: {\n          current: newProps.operation,\n          previous: state.operation.current\n        }\n      };\n    } else {\n      return null;\n    }\n  }\n\n  getContent() {\n    return null;\n  }\n\n  getPreviousTooltips() {\n    return React.createElement(React.Fragment, null, React.createElement(CSSTransition, {\n      in: this.state.operation.current !== this.state.operation.previous,\n      timeout: 500,\n      classNames: this.hiddenClasses,\n      appear: true,\n      key: this.state.operation.previous,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prev-tooltips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.getContent(this.state.operation.previous))));\n  }\n\n  getCurrentTooltips() {\n    return React.createElement(React.Fragment, null, React.createElement(CSSTransition, {\n      in: this.state.operation.current !== this.state.operation.previous,\n      timeout: 500,\n      classNames: this.visibleClasses,\n      appear: true,\n      key: this.state.operation.current,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"curr-tooltips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.getContent(this.state.operation.current))));\n  }\n\n  getNextButton() {\n    return React.createElement(React.Fragment, null, React.createElement(CSSTransition, {\n      in: this.state.operation.current !== this.initialStateOperation,\n      timeout: this.state.timeout,\n      classNames: this.visibleClasses,\n      appear: true,\n      key: this.state.operation.current,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"tooltips-next\",\n      href: \"# \",\n      onClick: this.next,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Next step\", React.createElement(\"i\", {\n      className: \"fas fa-arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"next-underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(CSSTransition, {\n      in: this.state.active,\n      timeout: 0,\n      classNames: this.visibleClasses,\n      appear: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"tooltips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.getPreviousTooltips(), this.getCurrentTooltips(), this.getNextButton())));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jonathan Kelaty/Desktop/tree-visualizer/src/TreeVisualizer/Tooltips/Tooltips.jsx"],"names":["React","CSSTransition","Tooltips","Component","constructor","props","initialStateOperation","visibleClasses","appearDone","enterDone","exit","hiddenClasses","appearActive","enterActive","operationSteps","next","state","active","timeout","operation","current","previous","getDerivedStateFromProps","newProps","getContent","getPreviousTooltips","getCurrentTooltips","getNextButton","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport{ CSSTransition } from 'react-transition-group'\r\n\r\nimport './Tooltips.scss';\r\n\r\nexport default class Tooltips extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialStateOperation = 'Initial';\r\n\r\n        this.visibleClasses = {\r\n            appearDone: 'visible',\r\n            enterDone: 'visible',\r\n            exit: 'visible'\r\n        };\r\n\r\n        this.hiddenClasses = {\r\n            appearActive: 'hiding',\r\n            enterActive: 'hiding',\r\n            appearDone: 'hidden',\r\n            enterDone: 'hidden'\r\n        };\r\n\r\n        this.operationSteps = this.props.operationSteps;\r\n        this.next = this.props.next;\r\n\r\n        this.state = {\r\n            active: this.props.active,\r\n            timeout: this.props.timeout,\r\n            operation: {\r\n                current: this.props.operation,\r\n                previous: this.props.operation\r\n            }\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(newProps, state) {\r\n        if ( (state.active !== newProps.active) || (state.operation.current !== newProps.operation) ) {\r\n            return {\r\n                active: newProps.active,\r\n                timeout: newProps.timeout,\r\n                operation: {\r\n                    current: newProps.operation,\r\n                    previous: state.operation.current\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getContent() {\r\n        return null;\r\n    }\r\n\r\n    getPreviousTooltips() {\r\n        return (\r\n            <>\r\n                <CSSTransition\r\n                    in={this.state.operation.current !== this.state.operation.previous}\r\n                    timeout={500}\r\n                    classNames={this.hiddenClasses}\r\n                    appear={true}\r\n                    key={this.state.operation.previous}>\r\n\r\n                    <div className='prev-tooltips'>\r\n                        { this.getContent(this.state.operation.previous) }\r\n                    </div>\r\n\r\n                </CSSTransition>\r\n            </>\r\n        );\r\n    }\r\n\r\n    getCurrentTooltips() {\r\n        return (\r\n            <>\r\n                <CSSTransition\r\n                    in={this.state.operation.current !== this.state.operation.previous}\r\n                    timeout={500}\r\n                    classNames={this.visibleClasses}\r\n                    appear={true}\r\n                    key={this.state.operation.current}>\r\n\r\n                    <div className='curr-tooltips'>\r\n                        { this.getContent(this.state.operation.current) }\r\n                    </div>\r\n\r\n                </CSSTransition>\r\n            </>\r\n        );\r\n    }\r\n\r\n    getNextButton() {\r\n        return (\r\n            <>\r\n                <CSSTransition\r\n                    in={this.state.operation.current !== this.initialStateOperation}\r\n                    timeout={this.state.timeout}\r\n                    classNames={this.visibleClasses}\r\n                    appear={true}\r\n                    key={this.state.operation.current}>\r\n\r\n                    <a\r\n                        className='tooltips-next'\r\n                        href='# '\r\n                        onClick={this.next}>\r\n                        Next step\r\n                        <i className=\"fas fa-arrow-right\" />\r\n                        <div className='next-underline' />\r\n                    </a>\r\n\r\n                </CSSTransition>\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <CSSTransition\r\n                    in={this.state.active}\r\n                    timeout={0}\r\n                    classNames={this.visibleClasses}\r\n                    appear={true}>\r\n\r\n                    <div id='tooltips'>\r\n                        { this.getPreviousTooltips() }\r\n                        { this.getCurrentTooltips() }\r\n                        { this.getNextButton() }\r\n                    </div>\r\n\r\n                </CSSTransition>\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}